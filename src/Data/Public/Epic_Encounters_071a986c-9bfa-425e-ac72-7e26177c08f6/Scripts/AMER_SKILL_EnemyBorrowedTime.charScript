#TEMPLATE "_SKILL_Base" : AMER_SKILL_BorrowedTime

INIT
CHARACTER:__Me
// [GLOBAL_VARS]
// [~GLOBAL_VARS]

EVENTS

// [EVENTS]
// [~EVENTS]

// Calculate the priority of the skill
EVENT CalculateScore_AMER_SKILL_BorrowedTime
VARS
	// [CALC_VARS]
	FLOAT:_SkillRangeMin
	FLOAT:_SkillRangeMax
	FLOAT:_SkillImpactRange
	FLOAT3:_TargetPos
	// [~CALC_VARS]
ON
	OnFunction("CalculateScore_AMER_SKILL_BorrowedTime")
ACTIONS

	// [CALC_ACTIONS_PRE]
	// [~CALC_ACTIONS_PRE]
	// [CALC_ACTIONS]
	IF "c1&c2"
	    CharacterGetSkillRange(_SkillRangeMin, _SkillRangeMax, __Me, AMER_SKILL_BorrowedTime) // c1
	    CharacterGetSkillImpactRange(_SkillImpactRange, __Me, AMER_SKILL_BorrowedTime) // c2
	THEN
		IF "c1"
			FindPosition(_TargetPos, __Me, _SkillRangeMax, _SkillImpactRange, __Me, -1, -1, 4, -1) // c3
		THEN
		    Set(%SkillTargetPos_AMER_SKILL_BorrowedTime, _TargetPos)
		    Add(%ActionScore_AMER_SKILL_BorrowedTime, 20.0)
		ELIF "c1"
			FindPosition(_TargetPos, __Me, _SkillRangeMax, _SkillImpactRange, __Me, -1, -1, 3, -1) // c3
		THEN
		    Set(%SkillTargetPos_AMER_SKILL_BorrowedTime, _TargetPos)
		    Add(%ActionScore_AMER_SKILL_BorrowedTime, 20.0)
		ELIF "c1"
			FindPosition(_TargetPos, __Me, _SkillRangeMax, _SkillImpactRange, __Me, -1, -1, 2, -1) // c3
		THEN
		    Set(%SkillTargetPos_AMER_SKILL_BorrowedTime, _TargetPos)
		    Add(%ActionScore_AMER_SKILL_BorrowedTime, 20.0)
		ENDIF
	ENDIF
	// [~CALC_ACTIONS]