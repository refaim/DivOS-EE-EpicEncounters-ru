#TEMPLATE "_SKILL_Base" : Target_EnemyTargetedDamageBoost
	
INIT
CHARACTER:__Me
FLOAT:%SkillTargetScore_Target_EnemyTargetedDamageBoost=-1000000
// [GLOBAL_VARS]
EXTERN INT:%Target_EnemyTargetedDamageBoost_UseOnAllies = 1
// [~GLOBAL_VARS]
	
EVENTS
	
// [EVENTS]
// [~EVENTS]
	
// Calculate the priority of the skill
EVENT CalculateScore_Target_EnemyTargetedDamageBoost
VARS
	// [CALC_VARS]
	FLOAT:_SkillRangeMin
	FLOAT:_SkillRangeMax
	FLOAT3:_TargetPos
	// [~CALC_VARS]
ON
	OnFunction("CalculateScore_Target_EnemyTargetedDamageBoost")
ACTIONS
	Set(%SkillTargetScore_Target_EnemyTargetedDamageBoost, -1000000)

	// [CALC_ACTIONS_PRE]
	// [~CALC_ACTIONS_PRE]
	// [CALC_ACTIONS]
	IF "c1"
		IsEqual(%Target_EnemyTargetedDamageBoost_UseOnAllies, INT:1)
	THEN
		IterateCharactersInCombat(__Me, "CalculateTarget_Target_EnemyTargetedDamageBoost", Highest, Vitality)
		IF "!c1"
			IsEqual(%SkillTargetChar_Target_EnemyTargetedDamageBoost, null)
		THEN
			Add(%ActionScore_Target_EnemyTargetedDamageBoost, %SkillTargetScore_Target_EnemyTargetedDamageBoost)
		ENDIF
	ELIF "!c1"
		CharacterHasStatus(__Me, CONSUME, SKILLBOOST_TargetedDamageBoost)
	THEN
		Set(%SkillTargetChar_Target_EnemyTargetedDamageBoost, __Me)
		Set(%ActionScore_Target_EnemyTargetedDamageBoost, 20.0)
	ENDIF
	// [~CALC_ACTIONS]
	
	
	
	
// Calculate the character we should target
EVENT CalculateTarget_Target_EnemyTargetedDamageBoost
VARS	
	CHARACTER:_Char
	// [CALC_TARGET_VARS]
	INT:_ClassScore_Target_EnemyTargetedDamageBoost
	FLOAT:_StatResistance
	FLOAT:_Score
	FLOAT:_SkillRangeMin
	FLOAT:_SkillRangeMax
	FLOAT:_DistanceToChar
	FLOAT:_DistanceScore
	FLOAT:_SaveScore
	FLOAT:_Vitality
	FLOAT:_Level
	INT:_SaveAmount
	// [~CALC_TARGET_VARS]
ON
	OnIterateCharacter(_Char, "CalculateTarget_Target_EnemyTargetedDamageBoost")	
ACTIONS
	// [CALC_CHAR_TARGET_ACTIONS_PRE]
	Set(_Score, 0.0)
	// [~CALC_CHAR_TARGET_ACTIONS_PRE]
	// [CALC_CHAR_TARGET_ACTIONS]
	IF "!c1"
		CharacterIsDead(_Char)
	THEN
		IF "c1"
			CharacterIsAlly(__Me, _Char)
		THEN
			IF "!c1"
				CharacterIsSummon(_Char)
			THEN
				IF "!c1"
					CharacterHasStatus(_Char CHARMED)
				THEN
					IF "!c1"
						CharacterHasStatus(_Char, CONSUME, SKILLBOOST_TargetedDamageBoost)
					THEN
						IF "!c1&!c2&!c3&!c4&!c5&!c6"
							CharacterHasStatus(_Char FROZEN)
							CharacterHasStatus(_Char FEAR)
							CharacterHasStatus(_Char STUNNED)
							CharacterHasStatus(_Char KNOCKED_DOWN)
							CharacterHasStatus(_Char PETRIFIED)
							CharacterHasStatus(_Char BLIND)
						THEN
							//Triage score calculation: Favor targets with
							//low vitality, try to stabilize/proc angel.
							IF "c1"
								CharacterGetStat(_Vitality, _Char, Vitality)
							THEN
								Multiply(_Vitality, -1.0)
								Add(_Vitality, 1.0)
								Multiply(_Vitality, 5.0)
								Add(_Score, _Vitality)
							ENDIF
					
							//Status influence calculation
							IF "c1"
								CharacterHasStatus(_Char, RAGED)
							THEN
								Add(_Score, 1.0)
							ENDIF
							IF "c1"
								CharacterHasStatus(_Char, CONSUME, AMER_GreaterInvisibility)
							THEN
								Add(_Score, 2.0)
							ENDIF
							IF "c1"
								CharacterHasStatus(_Char, INVISIBLE)
							THEN
								Add(_Score, 1.0)
							ENDIF
							IF "c1"
								CharacterHasStatus(_Char, MUTED)
							THEN
								Add(_Score, -3.0)
							ENDIF
							IF "c1"
								CharacterHasStatus(_Char, SLOWED)
							THEN
								Add(_Score, -1.0)
							ENDIF
							IF "c1"
								CharacterHasStatus(_Char, CRIPPLED
							THEN
								Add(_Score, -1.5)
							ENDIF
							IF "c1"
								CharacterHasStatus(_Char, WEAK)
							THEN
								Add(_Score, -1.5)
							ENDIF
								
								
							// Range score calculation
							IF "c1&c2"
								CharacterGetSkillRange(_SkillRangeMin, _SkillRangeMax, __Me, Target_EnemyTargetedDamageBoost)
								GetDistance(_DistanceToChar, __Me, _Char)
							THEN
								Set(_DistanceScore, _DistanceToChar)
								IF "c1"
									IsGreaterThen(_DistanceScore, _SkillRangeMax)
								THEN
									Subtract(_DistanceScore, _SkillRangeMax)
									Multiply(_DistanceScore, -1.0)
								ELIF "c1"
									IsLessThen(_DistanceScore, _SkillRangeMin)
								THEN
									Subtract(_DistanceScore, _SkillRangeMin)
									Multiply(_DistanceScore, 1.0)
								ELSE 
									Set(_DistanceScore, 0.0)
								ENDIF
								Add(_Score, _DistanceScore)
							ENDIF
								
							// Can see score calculation
							IF "!c1"
								CharacterCanSee(__Me, _Char)
							THEN
								Add(_Score, -10.0)
							ENDIF
							
							IF "c1"
								IsGreaterThen(_Score, %SkillTargetScore_Target_EnemyTargetedDamageBoost)
							THEN
								Set(%SkillTargetChar_Target_EnemyTargetedDamageBoost, _Char)
								Set(%SkillTargetScore_Target_EnemyTargetedDamageBoost, _Score)
							ENDIF
						ENDIF
					ENDIF
				ENDIF
			ENDIF
		ENDIF
	ENDIF
	// [~CALC_CHAR_TARGET_ACTIONS]
	
	
	
	
	
	
	
	