//===============================================//
//                                               //
//   M E L C H I O R ' S   P E R F E C T I O N   //
//                                               //
//     Written by Matteo "Ameranth" T. (2017)    //
//===============================================//
INIT
CHARACTER:__Me
EXTERN ITEM:%AMER_DoBeamEffect_Item = null
EXTERN ITEM:%AMER_DoBeamEffect_ItemSource = null
//EXTERN ITEM:%AMER_MelchiorPerfection_BeamItem1 = null
//EXTERN ITEM:%AMER_MelchiorPerfection_BeamItem2 = null
//EXTERN ITEM:%AMER_MelchiorPerfection_BeamItem3 = null
EXTERN ITEM:%AMER_MelchiorPerfection_BeyondOrb = null
EXTERN ITEM:%AMER_MelchiorPerfection_BeyondOrbBig = null
EXTERN ITEM:%AMER_MelchiorPerfection_FloorDisc1 = null
EXTERN ITEM:%AMER_MelchiorPerfection_FloorDisc2 = null
EXTERN ITEM:%AMER_MelchiorPerfection_FloorDisc3 = null
EXTERN ITEM:%AMER_MelchiorPerfection_FloorDisc4 = null
EXTERN ITEM:%AMER_MelchiorPerfection_FloorDisc5 = null
EXTERN ITEM:%AMER_MelchiorPerfection_FloorDisc6 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor1 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor2 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor3 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor4 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor5 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor6 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor7 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor8 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor9 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor10 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor11 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor12 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor13 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor14 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor15 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor16 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor17 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor18 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor19 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor20 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor21 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor22 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor23 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor24 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor25 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor26 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor27 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor28 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor29 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor30 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor31 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor32 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor33 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor34 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor35 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor36 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor37 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor38 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor39 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor40 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor41 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor42 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor43 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor44 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor45 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor46 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor47 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor48 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor49 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor50 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor51 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor52 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor53 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor54 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor55 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor56 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor57 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor58 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor59 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor60 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor61 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor62 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor63 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor64 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor65 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor66 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor67 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor68 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor69 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor70 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor71 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor72 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor73 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor74 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor75 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor76 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor77 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor78 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor79 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor80 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor81 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor82 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor83 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor84 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor85 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor86 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor87 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor88 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor89 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor90 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor91 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor92 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor93 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor94 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor95 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor96 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor97 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor98 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor99 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor100 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor101 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor102 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor103 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor104 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor105 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor106 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor107 = null
EXTERN ITEM:%AMER_MelchiorPerfection_Floor108 = null
EXTERN TRIGGER:%AMER_MelchiorPerfection_PlatformCenter = null
EXTERN TRIGGER:%AMER_MelchiorPerfection_AddSpawn1 = null
EXTERN TRIGGER:%AMER_MelchiorPerfection_AddSpawn2 = null
EXTERN TRIGGER:%AMER_MelchiorPerfection_AddSpawn3 = null
EXTERN TRIGGER:%AMER_MelchiorPerfection_AddSpawn4 = null
EXTERN TRIGGER:%AMER_MelchiorPerfection_AddSpawn5 = null
EXTERN TRIGGER:%AMER_MelchiorPerfection_AddSpawn6 = null
EXTERN TRIGGER:%AMER_MelchiorPerfection_AddSpawn7 = null
EXTERN TRIGGER:%AMER_MelchiorPerfection_AddSpawn8 = null
EXTERN TRIGGER:%AMER_MelchiorPerfection_AddSpawn9 = null
EXTERN TRIGGER:%AMER_MelchiorPerfection_AddSpawn10 = null
EXTERN TRIGGER:%AMER_MelchiorPerfection_AddSpawn11 = null
EXTERN TRIGGER:%AMER_MelchiorPerfection_AddSpawn12 = null
EXTERN TRIGGER:%AMER_MelchiorPerfection_AddSpawn13 = null
EXTERN TRIGGER:%AMER_MelchiorPerfection_AddSpawn14 = null
EXTERN TRIGGER:%AMER_MelchiorPerfection_AddSpawn15 = null
EXTERN TRIGGER:%AMER_MelchiorPerfection_AddSpawn16 = null
EXTERN TRIGGER:%AMER_MelchiorPerfection_AddSpawn17 = null
EXTERN TRIGGER:%AMER_MelchiorPerfection_AddSpawn18 = null
//EXTERN TRIGGER:%AMER_MelchiorPerfection_BeyondOrbMoveTo = null
//EXTERN TRIGGER:%AMER_MelchiorPerfection_BeyondOrbMoveOrigin = null
EXTERN FIXEDSTRING:%AMER_MelchiorPerfection_Atmosphere = null
CHARACTER:%AMER_MelchiorPerfection_TargetChar = null
CHARACTER:%AMER_MelchiorPerfection_LastRayTarget = null
FIXEDSTRING:%AMER_DoBeamEffect_Effect = "FX_GP_SuaBeam_A"
FIXEDSTRING:%AMER_DoBeamEffect_SourceBone = "Bip001 R Forearm"
INT:%AMER_MelchiorPerfection_VoidDiscIndex = 0
INT:%AMER_DoBeamEffect_Handle
INT:%AMER_MelchiorPerfection_AddCount
INT:%AMER_MelchiorPerfection_Handle
INT:%AMER_MelchiorPerfection_BeamCount
INT:%AMER_MelchiorPerfection_MyLevel
INT:%AMER_MelchiorPerfection_Phase
INT:%AMER_MelchiorPerfection_SpawnAddsCountdown
INT:%AMER_MelchiorPerfection_FloorShuffleIndex
INT:%AMER_MelchiorPerfection_VoidZoneIndex
INT:%AMER_MelchiorPerfection_TurnCount
INT:%AMER_MelchiorPerfection_TimeStopAllowed
INT:%AMER_MelchiorPerfection_TimeStopsCast
INT:%AMER_MelchiorPerfection_TimeStopDuration
INT:%AMER_MelchiorPerfection_BeamHandle1
INT:%AMER_MelchiorPerfection_BeamHandle2
INT:%AMER_MelchiorPerfection_BeamHandle3
FLOAT:%AMER_MelchiorPerfection_VitalityThreshold
FLOAT:%AMER_MelchiorPerfection_BeamXMod
FLOAT:%AMER_MelchiorPerfection_BeamZMod
FLOAT:%AMER_MelchiorPerfection_BeamXModLeft
FLOAT:%AMER_MelchiorPerfection_BeamZModLeft
FLOAT:%AMER_MelchiorPerfection_BeamXModRight
FLOAT:%AMER_MelchiorPerfection_BeamZModRight
FLOAT:%AMER_MelchiorPerfection_BeamX
FLOAT:%AMER_MelchiorPerfection_BeamZ
FLOAT3:%AMER_MelchiorPerfection_BeamPos
FLOAT3:%AMER_MelchiorPerfection_HideBeamPos
FLOAT3:%AMER_DoScaledSFX_Point
FIXEDSTRING:%AMER_DoScaledSFX_Effect
FLOAT:%AMER_DoScaledSFX_Scale
ITEM:%AMER_DoMoveItem_Item
TRIGGER:%AMER_DoMoveItem_Trigger
FLOAT:%AMER_DoMoveItem_Speed = 2.0
FLOAT:%AMER_DoMoveItem_Acceleration = 0.0
INT:%AMER_DoMoveItem_UseRotation = 0
	
	
EVENTS
EVENT MelchiorPerfectionInit
ON
	OnInit()
ACTIONS
	CharacterSetImmortal(__Me, 1)
	
	IF "!c1"
		CharacterHasStatus(__Me, CONSUME, "AMER_CMB_MelchiorPerfection_Center")
	THEN
		AddStatusInfluence(__Me, CONSUME, 1, "AMER_CMB_MelchiorPerfection_Center", 0)
	ENDIF
	
	GetPosition(%AMER_DoBeamEffect_Item, %AMER_MelchiorPerfection_HideBeamPos)
	
	//SetVisible(%AMER_MelchiorPerfection_BeyondOrb, INT:0)
	//SetVisible(%AMER_MelchiorPerfection_BeyondOrbBig, INT:0)
	ItemSetOnStage(%AMER_MelchiorPerfection_BeyondOrb, INT:0)
	ItemSetOnStage(%AMER_MelchiorPerfection_BeyondOrbBig, INT:0)
	
	
	
EVENT MelchiorPerfectionVitalityChanged
VARS
//===========================//
	INT:_Phase2Lines = 1
	INT:_Phase3Lines = 1
	FLOAT:_Phase2Trigger = 0.15
	FLOAT:_Phase3Trigger = 0.15
	FLOAT:_FinalVictory = 0.02
	//FLOAT:_TimeStopVitalityInterval = 0.25
//===========================//
	FLOAT:_Threshold
	FLOAT:_Vitality
	INT:_Rand
	STRING:_Str
	FIXEDSTRING:_WhichText
ON
	OnVitalityChanged(_Vitality)
ACTIONS
	IF "!c1"
		IsGreaterThen(_Vitality, %AMER_MelchiorPerfection_VitalityThreshold)
	THEN
		/*******PHASES ARE NUMBERED STARTING FROM ZERO*********/
		SetHealth(__Me, 1.0)
		//PlayEffectAt(__Me, "FX_Skills_Warrior_Rage_Cast_A")
		Add(%AMER_MelchiorPerfection_Phase, INT:1)
		GetElement(%AMER_MelchiorPerfection_VitalityThreshold, %AMER_MelchiorPerfection_Phase, _Phase2Trigger, _Phase3Trigger, _FinalVictory)
		
		//Entering phase 2
		IF "c1"
			IsEqual(%AMER_MelchiorPerfection_Phase, INT:1)
		THEN
			AddStatusInfluence(__Me, CONSUME, 1, "AMER_CMB_MelchiorPerfection_First", 0)
			CharacterPlayEffect(__Me, "FX_Skills_Warrior_Rage_Cast_A")
			CharacterPlayEffect(__Me, "FX_Skills_Air_Storm_Impact_A")
			
			GetRandomBetween(_Rand, INT:1, _Phase2Lines)
			Print(_Str, "AMER_CMB_MelchiorPerfection_Phase2_[1]", _Rand)
			Cast(_WhichText, _Str)
			DisplayCombatInfoText(__Me, _WhichText, 3.5)
		ENDIF
		
		//Entering phase 3
		IF "c1"
			IsEqual(%AMER_MelchiorPerfection_Phase, INT:2)
		THEN
			CharacterPlayEffect(__Me, "FX_Skills_Warrior_Rage_Cast_A")
			CharacterPlayEffect(__Me, "FX_Skills_Air_Storm_Impact_A")
			
			GetRandomBetween(_Rand, INT:1, _Phase3Lines)
			Print(_Str, "AMER_CMB_MelchiorPerfection_Phase3_[1]", _Rand)
			Cast(_WhichText, _Str)
			DisplayCombatInfoText(__Me, _WhichText, 3.5)
		ENDIF
		
		//Phase trigger from 3 to 4 means the fight has been won.
		IF "c1"
			IsGreaterThen(%AMER_MelchiorPerfection_Phase, INT:2)
		THEN
			CharacterSetInvulnerable(__Me, 1)
			//CharacterSetFaction(__Me, "Good NPC")
			SetPriority(MelchiorPerfectionEndRoutine, 9999999)
			//StartTimer("AMER_MelchiorPerfection_Lootsplosion", 0.15, -1)
			//Story crap here.
		ENDIF
	ENDIF
	
	//Time Stop thresholds.
	IF "!c1"
		IsLessThen(%AMER_MelchiorPerfection_Phase, INT:2)
	THEN
		IF "c1"
			IsEqual(%AMER_MelchiorPerfection_TimeStopDuration, INT:0)
		THEN
			IF "c1"
				IsEqual(%AMER_MelchiorPerfection_TimeStopAllowed, INT:0)
			THEN
				Set(_Threshold, -1.0)	//Patch 1.1.9, only allow one Timestop.
				Multiply(_Threshold, %AMER_MelchiorPerfection_TimeStopsCast)
				Add(_Threshold, 1.0)
				IF "!c1"
					IsGreaterThen(_Vitality, _Threshold)
				THEN
					Set(%AMER_MelchiorPerfection_TimeStopAllowed, INT:1)
				ENDIF
			ENDIF
		ENDIF
	ENDIF
	
	
	
EVENT MelchiorPerfectionCombatEnded
ON
	OnCombatEnded()
ACTIONS
	IF "!c1"
		IsEqual(%AMER_MelchiorPerfection_Phase, INT:4)
	THEN
		SetHealth(__Me, 1.0)
		//Taunt the players if they wipe.
		DisplayCombatInfoText(__Me, "AMER_CMB_MelchiorPerfection_Wipe", 3.5)
		//Remove phase buff
		IF "c1"
			CharacterHasStatus(__Me, CONSUME, "AMER_CMB_MelchiorPerfection_First")
		THEN
			RemoveStatusInfluence(__Me, CONSUME, 1, "AMER_CMB_MelchiorPerfection_First", 0)
		ENDIF
		//Remove any cruelty buffs.
		RemoveStatusInfluence(__Me, CONSUME, 1, "AMER_CMB_MelchiorCarnality_BossBuff1", 0)
		RemoveStatusInfluence(__Me, CONSUME, 1, "AMER_CMB_MelchiorCarnality_BossBuff2", 0)
		RemoveStatusInfluence(__Me, CONSUME, 1, "AMER_CMB_MelchiorCarnality_BossBuff3", 0)
		RemoveStatusInfluence(__Me, CONSUME, 1, "AMER_CMB_MelchiorCarnality_BossBuff4", 0)
		RemoveStatusInfluence(__Me, CONSUME, 1, "AMER_CMB_MelchiorCarnality_BossBuff5", 0)
		RemoveStatusInfluence(__Me, CONSUME, 1, "AMER_CMB_MelchiorCarnality_BossBuff6", 0)
		RemoveStatusInfluence(__Me, CONSUME, 1, "AMER_CMB_MelchiorCarnality_BossBuff7", 0)
		
		//Stop lingering beam effects because the behavior won't
		//remove them if Death Ray damage ends combat.
		StopLoopEffect(%AMER_MelchiorPerfection_BeamHandle1)
		StopLoopEffect(%AMER_MelchiorPerfection_BeamHandle2)
		StopLoopEffect(%AMER_MelchiorPerfection_BeamHandle3)
		
		//Hide beam start and end points since the behavior won't
		//do this if Death Ray damage ends combat.
		ItemTeleportTo(%AMER_DoBeamEffect_Item, %AMER_MelchiorPerfection_HideBeamPos)
		ItemTeleportTo(%AMER_DoBeamEffect_ItemSource, %AMER_MelchiorPerfection_HideBeamPos)
		
		//Reset room atmosphere.
		ResetAtmosphere(%AMER_MelchiorPerfection_Atmosphere)
	ENDIF
	//Stop the void zone damage check timer.
	StopTimer("AMER_MelchiorPerfection_FindVoidZone")
		
	//Remove existing Void Zones
	StartTimer("AMER_MelchiorPerfection_RemoveVoidZones", 0.01, -1)
	CallFunction("AMER_MelchiorPerfection_RemoveDiscZones")
	
	
	
EVENT MelchiorPerfectionCombatStarted
VARS
//===========================//
	INT:_CombatStartedLines = 1
	INT:_SpawnAddsStartTurn = 1
	INT:_FloorIndexesShuffled = 108
	FLOAT:_Phase2Trigger = 0.15
//===========================//
	FLOAT:_SourceLevel
	INT:_Rand
	STRING:_Str
	FIXEDSTRING:_WhichText
ON
	OnCombatStarted()
ACTIONS
	//Get my level here so I don't need to retrieve it
	//every time I need it throughout combat.
	IF "c1"
		CharacterGetStat(_SourceLevel, __Me, Level)
	THEN
		Cast(%AMER_MelchiorPerfection_MyLevel, _SourceLevel)
	ELSE
		Set(%AMER_MelchiorPerfection_MyLevel, INT:25)
	ENDIF
	
	//Starting speech.
	GetRandomBetween(_Rand, INT:1, _CombatStartedLines)
	Print(_Str, "AMER_CMB_MelchiorPerfection_CombatStarted1", _Rand)
	Cast(_WhichText, _Str)
	DisplayCombatInfoText(__Me, _WhichText, 4.0)
	
	//Initialize variables.
	Set(%AMER_MelchiorPerfection_VitalityThreshold = _Phase2Trigger)
	Set(%AMER_MelchiorPerfection_Phase, INT:0)
	Set(%AMER_MelchiorPerfection_AddCount, INT:0)
	Set(%AMER_MelchiorPerfection_SpawnAddsCountdown, _SpawnAddsStartTurn)
	Set(%AMER_MelchiorPerfection_VoidZoneIndex, INT:1)
	Set(%AMER_MelchiorPerfection_VoidDiscIndex, INT:0)
	Set(%AMER_MelchiorPerfection_TurnCount, INT:0)
	Set(%AMER_MelchiorPerfection_TimeStopsCast, INT:0)
	Set(%AMER_MelchiorPerfection_TimeStopDuration, INT:0)
	Set(%AMER_MelchiorPerfection_TimeStopAllowed, INT:0)
	
	//Shuffle the indexes of the floor variables, this allows for a very
	//efficient way to have randomized void zone placement for each combat.
	Set(%AMER_MelchiorPerfection_FloorShuffleIndex, INT:1)
	StartTimer("AMER_MelchiorPerfection_ShuffleFloorIndexes", 0.01, _FloorIndexesShuffled)
	
	//Check if the active player is stepping on a void zone.
	StartTimer("AMER_MelchiorPerfection_FindVoidZone", 1.0, -1)
	
	
	
EVENT MelchiorPerfectionOnTurn
VARS
//===========================//
	//INT:_SpawnAddsFrequency = 2
	//INT:_DeathRayFrequency = 1
	INT:_SupportedVoidZones = 108
//===========================//
	FLOAT:_Vitality
ON
	OnTurn()
ACTIONS
	Add(%AMER_MelchiorPerfection_TurnCount, INT:1)
	
	//TEST
	//SetPriority(MelchiorPerfectionDeathRay, 20000)
	//SetPriority(MelchiorPerfectionFragments, 20000)
	//SetPriority(MelchiorPerfectionTimeStop, 20000)
	//TEST
	//SetPriority(MelchiorPerfectionEndRoutine, 9999999)
	//CharacterSetInvulnerable(__Me, 1)
	//DisplayText(__Me, "AMER_CMB_MelchiorPerfection_Defeat1", 5.0)
	//StartTimer("AMER_MelchiorPerfection_EndgameTeleportDelay", 3.5, 0)
	//TEST
	
	//Any Phase
	IF "c1"
		IsGreaterThen(%AMER_MelchiorPerfection_SpawnAddsCountdown, INT:0)
	THEN
		Subtract(%AMER_MelchiorPerfection_SpawnAddsCountdown, INT:1)
	ENDIF
	IF "c1"
		IsEqual(%AMER_MelchiorPerfection_SpawnAddsCountdown, INT:0)
	THEN
		//Set(%AMER_MelchiorPerfection_SpawnAddsCountdown, _SpawnAddsFrequency)
		SetPriority(MelchiorPerfectionFragments, 10100)
	ELSE
		//If in Phase 2 or higher, use Death Ray whenever not spawning adds.
		IF "c1"
			IsGreaterThen(%AMER_MelchiorPerfection_Phase, INT:0)
		THEN
			SetPriority(MelchiorPerfectionDeathRay, 10000)
		ENDIF
	ENDIF
	
	IF "c1"
		IsGreaterThen(%AMER_MelchiorPerfection_TimeStopDuration, INT:0)
	THEN
		IF "c1"
			IsGreaterThen(%AMER_MelchiorPerfection_TimeStopDuration, INT:0)
		THEN
			Subtract(%AMER_MelchiorPerfection_TimeStopDuration, INT:1)
		ENDIF
		IF "c1"
			IsEqual(%AMER_MelchiorPerfection_TimeStopDuration, INT:0)
		THEN
			CallFunction("AMER_MelchiorPerfection_EndTimeStop")
		ENDIF
	ENDIF
	
	IF "!c1"
		IsGreaterThen(%AMER_MelchiorPerfection_VoidZoneIndex, _SupportedVoidZones)
	THEN
		SetPriority(MelchiorPerfectionVoidZones, 10010)
	ENDIF
	
	//Time Stop check
	IF "c1"
		IsEqual(%AMER_MelchiorPerfection_TimeStopAllowed, INT:1)
	THEN
		SetPriority(MelchiorPerfectionTimeStop, 11000)
	ENDIF
	
	//Patch 1.1.8 fix games that had Melchior at zero. Also failsafe for
	//Melchior death, I suppose.
	IF "c1&!c2&c3"
		CharacterGetStat(_Vitality, __Me, Vitality)
		IsGreaterThen(_Vitality, 0.01)
		IsGreaterThen(%AMER_MelchiorPerfection_Phase, INT:2)
	THEN
		CharacterSetInvulnerable(__Me, 1)
		SetPriority(MelchiorPerfectionEndRoutine, 9999999)
	ENDIF
	
	
	
EVENT MelchiorPerfectionLootsplosion
VARS
//===========================//
	ITEMTEMPLATE:_MediumRoot = "AMER_ITEM_Lootsplosion_RewardMedium_616117f4-97c3-49cd-b397-c1e49d2f2e09"
	ITEMTEMPLATE:_BigRoot = "AMER_ITEM_Lootsplosion_RewardBig_2464811f-d492-4977-807d-d5a535c1f303"
	ITEMTEMPLATE:_MiniBossRoot = "AMER_ITEM_Lootsplosion_MiniBoss_0ae39956-a756-4925-8649-7d91805ba261"
	ITEMTEMPLATE:_MegaBossRoot = "AMER_ITEM_Lootsplosion_MegaBoss_6060f875-3a7c-4f65-a90c-b4b8ad975151"
	INT:_MediumSpawns = 15
	INT:_BigSpawns = 12
	INT:_MiniBossSpawns = 10
	INT:_MegaBossSpawns = 7
//===========================//
	STRING:_WhichEffect
	ITEM:_Spawn
	FLOAT3:_Pos
	FLOAT:_X
	FLOAT:_Z
	FLOAT:_RandOffset
ON
	OnTimer("AMER_MelchiorPerfection_Lootsplosion")
ACTIONS
	GetPosition(__Me, _Pos)
	IF "c1&c2"
		GetX(_Pos, _X)
		GetZ(_Pos, _Z)
	THEN
		//Spawn the loot at a random offset for flavor.
		GetRandomBetween(_RandOffset, -5.0, 5.0)
		Add(_X, _RandOffset)
		GetRandomBetween(_RandOffset, -5.0, 5.0)
		Add(_Z, _RandOffset)
		SetX(_Pos, _X)
		SetZ(_Pos, _Z)
		IF "c1"
			FindValidPosition(_Pos, 5.0)
		THEN
			//Create loot in ascending quality.
			Set(_Spawn, null)
			IF "c1"
				IsGreaterThen(_MediumSpawns, INT:0)
			THEN
				SpawnItem(_MediumRoot, _Pos, _Spawn)
				Subtract(_MediumSpawns, INT:1)
			ELIF "c1"
				IsGreaterThen(_BigSpawns, INT:0)
			THEN
				SpawnItem(_BigRoot, _Pos, _Spawn)
				Subtract(_BigSpawns, INT:1)
			ELIF "c1"
				IsGreaterThen(_MiniBossSpawns, INT:0)
			THEN
				SpawnItem(_MiniBossRoot, _Pos, _Spawn)
				Subtract(_MiniBossSpawns, INT:1)
			ELIF "c1"
				IsGreaterThen(_MegaBossSpawns, INT:0)
			THEN
				SpawnItem(_MegaBossRoot, _Pos, _Spawn)
				Subtract(_MegaBossSpawns, INT:1)
			ELSE
				//When it's done, set me offstage.
				StopTimer("AMER_MelchiorPerfection_Lootsplosion")
				CharacterSetOffStage()
			ENDIF
			
			IF "!c1"
				IsEqual(_Spawn, null)
			THEN
				GetRandom(_WhichEffect, "FX_Creatures_Skills_Dragon_Astral_FireBall_Impact_A", "FX_Skills_Water_GrenadeFrost_Impact_A", "FX_Creatures_Skills_Dragon_Astral_LightningBall_Impact_A", "FX_Creatures_Skills_Dragon_Astral_VoidBall_Impact_A", "FX_Skills_Earth_GrenadeTremor_Impact_A")
				PlayEffectAt(_Pos, _WhichEffect)
				ItemDie(_Spawn)
				ItemDestroy(_Spawn)
			ENDIF
		ENDIF
	ENDIF
	
	
	
//====================================================//
//              P L A Y E R   D E A T H               //
//====================================================//
EVENT MelchiorPerfectionPlayerSlain
VARS
	CHARACTER:_Char
	INT:_Rebirth
ON
	OnDie(_Char, _, _, _)
ACTIONS
	IF "c1"
		IsInCombat(__Me)
	THEN
		IF "c1"
			CharacterIsPlayer(_Char)
		THEN
			IF "!c1"
				CharacterIsSummon(_Char)
			THEN
				IF "c1&c2"
					//Don't heal from players using Rebirth.
					GetVar(_Rebirth, _Char, "AMER_RebirthCountdown")
					IsEqual(_Rebirth, INT:-1)
				THEN
					CharacterPlayEffect(_Char, "FX_GP_StarStone_Up_A")
					StartTimer("AMER_MelchiorPerfection_PlayerDieEffectDelay", 1.0, 0)
					StartTimer("AMER_MelchiorPerfection_PlayerDieHealDelay", 1.4, 0)
				ENDIF
			ENDIF
		ENDIF
	ENDIF
	
	
	
EVENT MelchiorPerfectionPlayerDieEffectDelay
ON
	OnTimer("AMER_MelchiorPerfection_PlayerDieEffectDelay")
ACTIONS
	CharacterPlayEffect(__Me, "FX_GP_StarStone_Down_A")
	
	
	
EVENT MelchiorPerfectionPlayerDieHealDelay
VARS
//===========================//
	FLOAT:_HealAmount = 0.3
//===========================//
ON
	OnTimer("AMER_MelchiorPerfection_PlayerDieHealDelay")
ACTIONS
	CharacterHeal(__Me, _HealAmount)
	
	
	
//====================================================//
//         L A R G E   V O I D   Z O N E S            //
//====================================================//
EVENT MelchiorPerfectionDiscZones
VARS
	ITEM:_WhichDisc
ON
	OnFunction("AMER_MelchiorPerfection_DiscZones")
ACTIONS
	GetElement(_WhichDisc, %AMER_MelchiorPerfection_VoidDiscIndex, %AMER_MelchiorPerfection_FloorDisc1, %AMER_MelchiorPerfection_FloorDisc2, %AMER_MelchiorPerfection_FloorDisc3, %AMER_MelchiorPerfection_FloorDisc4, %AMER_MelchiorPerfection_FloorDisc5, %AMER_MelchiorPerfection_FloorDisc6)
	SetVar(_WhichDisc, "AMER_MelchiorVoidZone_Active", INT:1)
	PlayEffectAt(_WhichDisc, "FX_Creatures_Skills_Dragon_Astral_VoidBall_Impact_A")
	SetMaterial(_WhichDisc, "e1474f97-e424-434f-afc3-b0381a728eff", -1, 1, 1, 1)
	
	//Skip one disc, wrap to beginning of array if beyond 5.
	Add(%AMER_MelchiorPerfection_VoidDiscIndex, 2)
	IF "c1"
		IsGreaterThen(%AMER_MelchiorPerfection_VoidDiscIndex, 5)
	THEN
		Subtract(%AMER_MelchiorPerfection_VoidDiscIndex, 6)
	ENDIF
	
	GetElement(_WhichDisc, %AMER_MelchiorPerfection_VoidDiscIndex, %AMER_MelchiorPerfection_FloorDisc1, %AMER_MelchiorPerfection_FloorDisc2, %AMER_MelchiorPerfection_FloorDisc3, %AMER_MelchiorPerfection_FloorDisc4, %AMER_MelchiorPerfection_FloorDisc5, %AMER_MelchiorPerfection_FloorDisc6)
	SetVar(_WhichDisc, "AMER_MelchiorVoidZone_Active", INT:1)
	PlayEffectAt(_WhichDisc, "FX_Creatures_Skills_Dragon_Astral_VoidBall_Impact_A")
	SetMaterial(_WhichDisc, "e1474f97-e424-434f-afc3-b0381a728eff", -1, 1, 1, 1)
	
EVENT MelchiorPerfectionRemoveDiscZones
VARS
	ITEM:_WhichDisc
ON
	OnFunction("AMER_MelchiorPerfection_RemoveDiscZones")
ACTIONS
	//Remove the last used disc.
	GetElement(_WhichDisc, %AMER_MelchiorPerfection_VoidDiscIndex, %AMER_MelchiorPerfection_FloorDisc1, %AMER_MelchiorPerfection_FloorDisc2, %AMER_MelchiorPerfection_FloorDisc3, %AMER_MelchiorPerfection_FloorDisc4, %AMER_MelchiorPerfection_FloorDisc5, %AMER_MelchiorPerfection_FloorDisc6)
	SetVar(_WhichDisc, "AMER_MelchiorVoidZone_Active", INT:0)
	SetMaterial(_WhichDisc, "e80a3ac6-ff59-406e-9d71-4657533e8659", 1, 1, 1, 1)
	
	//Remove the other disc of this set, which is two indeces backward.
	//Wrap to end of array if less than zero.
	Subtract(%AMER_MelchiorPerfection_VoidDiscIndex, 2)
	IF "c1"
		IsLessThen(%AMER_MelchiorPerfection_VoidDiscIndex, 0)
	THEN
		Add(%AMER_MelchiorPerfection_VoidDiscIndex, 6)
	ENDIF
	
	GetElement(_WhichDisc, %AMER_MelchiorPerfection_VoidDiscIndex, %AMER_MelchiorPerfection_FloorDisc1, %AMER_MelchiorPerfection_FloorDisc2, %AMER_MelchiorPerfection_FloorDisc3, %AMER_MelchiorPerfection_FloorDisc4, %AMER_MelchiorPerfection_FloorDisc5, %AMER_MelchiorPerfection_FloorDisc6)
	SetVar(_WhichDisc, "AMER_MelchiorVoidZone_Active", INT:0)
	SetMaterial(_WhichDisc, "e80a3ac6-ff59-406e-9d71-4657533e8659", 1, 1, 1, 1)
	
	//Set the index to the next disc to be used, wrap to beginning of array if beyond 5.
	Add(%AMER_MelchiorPerfection_VoidDiscIndex, 1)
	IF "c1"
		IsGreaterThen(%AMER_MelchiorPerfection_VoidDiscIndex, 5)
	THEN
		Subtract(%AMER_MelchiorPerfection_VoidDiscIndex, 6)
	ENDIF
	
	
//====================================================//
//         S M A L L   V O I D   Z O N E S            //
//====================================================//
EVENT MelchiorPerfectionShuffleFloorIndexes
//Swap the items stored in one floor variable with a random
//one of the same set (outer, middle, or inner).
VARS
//===========================//
	INT:_OuterFloorMaxIndex = 48
	INT:_MiddleFloorLowIndex = 49
	INT:_MiddleFloorMaxIndex = 84
	INT:_InnerFloorLowIndex = 85
	INT:_InnerFloorMaxIndex = 108
//===========================//
	INT:_Rand
	ITEM:_Item1
	ITEM:_Item2
	STRING:_Str
	FIXEDSTRING:_Index1
	FIXEDSTRING:_Index2
ON
	//OnFunction("AMER_MelchiorPerfection_ShuffleFloorIndexes")
	OnTimer("AMER_MelchiorPerfection_ShuffleFloorIndexes")
ACTIONS
	Print(_Str, "AMER_MelchiorPerfection_Floor[1]", %AMER_MelchiorPerfection_FloorShuffleIndex)
	Cast(_Index1, _Str)
	IF "c1"
		GetVar(_Item1, __Me, _Index1)
	THEN
		IF "!c1"
			IsGreaterThen(%AMER_MelchiorPerfection_FloorShuffleIndex, _OuterFloorMaxIndex)
		THEN
			GetRandomBetween(_Rand, INT:1, _OuterFloorMaxIndex)
		ELIF "c1&!c2"
			IsGreaterThen(%AMER_MelchiorPerfection_FloorShuffleIndex, _OuterFloorMaxIndex)
			IsGreaterThen(%AMER_MelchiorPerfection_FloorShuffleIndex, _MiddleFloorMaxIndex)
		THEN
			GetRandomBetween(_Rand, _MiddleFloorLowIndex, _MiddleFloorMaxIndex)
		ELIF "c1&!c2"
			IsGreaterThen(%AMER_MelchiorPerfection_FloorShuffleIndex, _MiddleFloorMaxIndex)
			IsGreaterThen(%AMER_MelchiorPerfection_FloorShuffleIndex, _InnerFloorMaxIndex)
		THEN
			GetRandomBetween(_Rand, _InnerFloorLowIndex, _InnerFloorMaxIndex)
		ENDIF
		
		Print(_Str, "AMER_MelchiorPerfection_Floor[1]", _Rand)
		Cast(_Index2, _Str)
		IF "c1"
			GetVar(_Item2, __Me, _Index2)
		THEN
			SetVar(__Me, _Index1, _Item2)
			SetVar(__Me, _Index2, _Item1)
		ENDIF
	ENDIF
	
	Add(%AMER_MelchiorPerfection_FloorShuffleIndex, INT:1)
	
	
	
EVENT MelchiorPerfectionRemoveVoidZones
//Using the void zone count we can remove any void zones,
//in descending order, that were created.
VARS
//===========================//
	FIXEDSTRING:_NormalFloorMaterial = "33b10d05-2282-4c50-9dc6-a31bb73e3d90"
//===========================//
	ITEM:_WhichZone
	STRING:_Str
	FIXEDSTRING:_WhichVar
ON
	OnTimer("AMER_MelchiorPerfection_RemoveVoidZones")
ACTIONS
	IF "c1"
		IsGreaterThen(%AMER_MelchiorPerfection_VoidZoneIndex, INT:0)
	THEN
		Print(_Str, "AMER_MelchiorPerfection_Floor[1]", %AMER_MelchiorPerfection_VoidZoneIndex)
		Cast(_WhichVar, _Str)
		IF "c1"
			GetVar(_WhichZone, __Me, _WhichVar)
		THEN
			SetVar(_WhichZone, "AMER_MelchiorVoidZone_Active", INT:0)
			SetMaterial(_WhichZone, _NormalFloorMaterial, 1, 1, 1, 1)
		ENDIF
		Subtract(%AMER_MelchiorPerfection_VoidZoneIndex, INT:1)
	ELSE
		StopTimer("AMER_MelchiorPerfection_RemoveVoidZones")
	ENDIF
	
	
	
EVENT MelchiorPerfectionCreateVoidZone
VARS
//===========================//
	FIXEDSTRING:_VoidZoneMaterial = "e1474f97-e424-434f-afc3-b0381a728eff"
	STRING:_VoidZoneEffect = "FX_Creatures_Skills_Dragon_Astral_VoidBall_Impact_A"
//===========================//
	ITEM:_WhichZone
	STRING:_Str
	FIXEDSTRING:_WhichVar
ON
	OnFunction("AMER_MelchiorPerfection_CreateVoidZone")
ACTIONS
	Print(_Str, "AMER_MelchiorPerfection_Floor[1]", %AMER_MelchiorPerfection_VoidZoneIndex)
	Cast(_WhichVar, _Str)
	IF "c1"
		GetVar(_WhichZone, __Me, _WhichVar)
	THEN
		SetVar(_WhichZone, "AMER_MelchiorVoidZone_Active", INT:1)
		PlayEffectAt(_WhichZone, _VoidZoneEffect)
		SetMaterial(_WhichZone, _VoidZoneMaterial, -1, 1, 1, 1)
		Add(%AMER_MelchiorPerfection_VoidZoneIndex, INT:1)
	ENDIF
	
	
	
EVENT MelchiorPerfectionFindVoidZone
//Check if the active character is within "standing
//proximity" of a potential void zone.
VARS
	CHARACTER:_ActiveChar
ON
	OnTimer("AMER_MelchiorPerfection_FindVoidZone")
ACTIONS
	IF "c1"
		//%AMER_ActiveChar is maintained by AMER_CharacterExtensions script.
		GetVar(_ActiveChar, __Me, "AMER_ActiveChar")
	THEN
		IF "c1"
			CharacterIsEnemy(__Me, _ActiveChar)
		THEN
			IterateItemsNear(_ActiveChar, 18.0, "AMER_MelchiorPerfection_VoidZoneDamage")
		ENDIF
	ENDIF
	
	
	
EVENT MelchiorPerfectionVoidZoneDamage
//If the iterated item is an activated void zone, check
//if the active character is actually standing on it. If
//it is, then damage the character, but only once per
//round.
VARS
//===========================//
	STRING:_DamageEffect = "FX_Creatures_Skills_Dragon_Astral_VoidBall_Impact_A"
	FLOAT:_Damage = 0.4
	DEATH:_DeathType = Electrocution
//===========================//
	CHARACTER:_ActiveChar
	CHARACTER:_LastDamaged
	ITEM:_WhichZone
	FLOAT:_Vitality
	INT:_TurnCount
	INT:_Activated
ON
	OnIterateItem(_WhichZone, "AMER_MelchiorPerfection_VoidZoneDamage")
ACTIONS
	IF "c1&c2"
		GetVar(_Activated, _WhichZone, "AMER_MelchiorVoidZone_Active")
		IsEqual(_Activated, INT:1)
	THEN
		IF "c1&c2"
			//%AMER_ActiveChar is maintained by AMER_CharacterExtensions script.
			GetVar(_ActiveChar, __Me, "AMER_ActiveChar")
			IsObjectOnObject(_ActiveChar, _WhichZone)
		THEN
			//Either the character to be damaged is different than the last one
			//damaged, or it is a new round.
			IF "c1&c2&(!c3|!c4)"
				GetVar(_TurnCount, _WhichZone, "AMER_MelchiorVoidZone_TurnCount")
				GetVar(_LastDamaged, _WhichZone, "AMER_MelchiorVoidZone_LastDamaged")
				IsEqual(_TurnCount, %AMER_MelchiorPerfection_TurnCount)
				IsEqual(_LastDamaged, _ActiveChar)
			THEN
				IF "c1"
					CharacterGetStat(_Vitality, _ActiveChar, Vitality)
				THEN
					SetVar(_WhichZone, "AMER_MelchiorVoidZone_TurnCount", %AMER_MelchiorPerfection_TurnCount)
					SetVar(_WhichZone, "AMER_MelchiorVoidZone_LastDamaged", _ActiveChar)
					Subtract(_Vitality, _Damage)
					CharacterPlayEffect(_ActiveChar, _DamageEffect)
					IF "!c1"
						IsGreaterThen(_Vitality, 0.0)
					THEN
						CharacterDie(_ActiveChar, _DeathType)
					ELSE
						SetHealth(_ActiveChar, _Vitality)
					ENDIF
				ENDIF
			ENDIF
		ENDIF
	ENDIF
	
	
	
//====================================================//
//                 F R A G M E N T S                  //
//====================================================//
EVENT MelchiorPerfectionSpawnAdds
VARS
//===========================//
	INT:_SupportedPoints = 18
	FLOAT:_SpawnDistance = 20.0
	CHARACTERTEMPLATE:_Hope = "AMER_CHAR_Melchior_FragmentOfHope_9de4f45b-6cbb-459a-836d-c4d62da74d86"
	CHARACTERTEMPLATE:_Fear = "AMER_CHAR_Melchior_FragmentOfFear_7d106936-fc35-452b-ae46-109f4e7c2baf"
	CHARACTERTEMPLATE:_Cruelty = "AMER_CHAR_Melchior_FragmentOfCruelty_a8b675b3-1e48-41f6-add8-50d40b77f069"
	CHARACTERTEMPLATE:_Restraint = "AMER_CHAR_Melchior_FragmentOfRestraint_073c1659-4d84-49f2-a4fe-483868b8f37e"
	STRING:_HopeFX = "FX_Skills_Water_GrenadeFrost_Impact_A"
	STRING:_FearFX = "FX_Creatures_Skills_Dragon_Astral_VoidBall_Impact_A"
	STRING:_CrueltyFX = "FX_Creatures_Skills_Dragon_Astral_FireBall_Impact_A"
	STRING:_RestraintFX= "FX_Creatures_Skills_Dragon_Astral_Earth_Impact_A"
	//SKILL:_GroupCombat = "AMER_SCRIPTSKILL_GroupCombat"
//===========================//
	CHARACTERTEMPLATE:_WhichRoot
	CHARACTER:_Spawn
	TRIGGER:_WhichPoint
	FIXEDSTRING:_WhichVar
	STRING:_WhichEffect
	STRING:_Str
	FLOAT3:_Direction
	FLOAT3:_Pos
	FLOAT3:_SpawnAngle
	FLOAT:_RandomAngle
	FLOAT:_X
	FLOAT:_Z
	FLOAT:_XMod
	FLOAT:_ZMod
	INT:_Rand
ON
	OnFunction("AMER_MelchiorPerfection_SpawnAdds")
ACTIONS
	//What direction is the platform center.
	GetDirection(__Me, %AMER_MelchiorPerfection_PlatformCenter, _Direction, _)
	
	//Calculate a random point within the opposite end of
	//the platform to spawn at.
	Set(_SpawnAngle, _Direction)
	GetRandomBetween(_RandomAngle, -90.0, 90.0)
	RotateY(_SpawnAngle, _RandomAngle)
	GetPosition(__Me, _Pos)
	IF "c1&c2&c3&c4"
		GetX(_SpawnAngle, _XMod)
		GetZ(_SpawnAngle, _ZMod)
		GetX(_Pos, _X)
		GetZ(_Pos, _Z)
	THEN
		//XMod and ZMod are essentially unit circle values for
		//the random direction. Multiply them with _SpawnDistance
		//to produce the correct X/Z modifications to facilitate
		//a movement of _SpawnDistance in the random direction.
		Multiply(_XMod, _SpawnDistance)
		Multiply(_ZMod, _SpawnDistance)
		Add(_X, _XMod)
		Add(_Z, _ZMod)
		SetX(_Pos, _X)
		SetZ(_Pos, _Z)
			
		IF "c1"
			FindValidPosition(_Pos, 20.0)
		THEN
			//Get the root/special effect for said root.
			GetElement(_WhichRoot, %AMER_MelchiorPerfection_AddCount, _Fear, _Cruelty, _Restraint, _Hope)
			GetElement(_WhichEffect, %AMER_MelchiorPerfection_AddCount, _FearFX, _CrueltyFX, _RestraintFX, _HopeFX)
				
			SpawnCharacter(_Spawn, _WhichRoot, _Pos, 1, 1, __Me, %AMER_MelchiorPerfection_MyLevel)
			SetVar(_Spawn, "AMER_MelchiorFragment_Perfection", __Me)
			PlayEffectAt(_Spawn, _WhichEffect)
		
			//Use a remote effect to add the spawn to combat.
			//SetVar(__Me, "AMER_RemoteEffectProjectile", _GroupCombat)
			//SetVar(__Me, "AMER_RemoteEffectSource", _Spawn)
			//SetVar(__Me, "AMER_RemoteEffectSourceAsTarget", INT:1)
			//CallFunction("AMER_DoRemoteEffect")
		ENDIF
	ENDIF
	
	
	
//====================================================//
//                 D E A T H   R A Y                  //
//====================================================//
EVENT MelchiorPerfectionFindDeathRayTarget
VARS
	CHARACTER:_Char
ON
	OnIterateCharacter(_Char, "AMER_MelchiorPerfection_FindDeathRayTarget")
ACTIONS
	IF "c1"
		IsEqual(%AMER_MelchiorPerfection_TargetChar, null)
	THEN
		IF "c1"
			CharacterIsEnemy(__Me, _Char)
		THEN
			IF "!c1"
				CharacterIsDead(_Char)
			THEN
				IF "!c1"
					IsEqual(%AMER_MelchiorPerfection_LastRayTarget, _Char)
				THEN
					Set(%AMER_MelchiorPerfection_TargetChar, _Char)
				ENDIF
			ENDIF
		ENDIF
	ENDIF
	
	
	
EVENT MelchiorPerfectionDeathRayDamage
VARS
//===========================//
	SKILL:_Projectile = AMER_SCRIPTSKILL_EnemyDeathRayDamage
//===========================//
	CHARACTER:_Char
ON
	OnIterateCharacter(_Char, "AMER_MelchiorPerfection_DeathRayDamage")
ACTIONS
	IF "!c1"
		CharacterHasStatus(_Char, CONSUME, "AMER_CMB_MelchiorPerfection_DeathRayChoke")
	THEN
		AddTemporaryStatusInfluence(_Char, CONSUME, 1, "AMER_CMB_MelchiorPerfection_DeathRayChoke", 0)
		IF "!c1"
			IsEqual(_Char, __Me)
		THEN
			IF "!c1"
				CharacterIsDead(_Char)
			THEN
				SetVar(__Me, "AMER_RemoteEffectProjectile", _Projectile)
				SetVar(__Me, "AMER_RemoteEffectSource", _Char)
				SetVar(__Me, "AMER_RemoteEffectSourceAsTarget", INT:1)
				CallFunction("AMER_DoRemoteEffect")
			ENDIF
		ENDIF
	ENDIF
	
	
	
EVENT MelchiorPerfectionMoveBeam
VARS
//===========================//
	FLOAT:_DamageRadius = 5.0
	INT:_MaximumIterations = 112
//===========================//
	FLOAT3:_MyPos
	FLOAT:_Rand
	FLOAT:_Y
	INT:_EffectCount = 0
	STRING:_WhichEffect
ON
	//OnFunction("AMER_MelchiorPerfection_MoveBeam")
	OnTimer("AMER_MelchiorPerfection_MoveBeam")
ACTIONS
	IF "c1"
		IsLessThen(%AMER_MelchiorPerfection_BeamCount, INT:14)
	THEN
		Add(%AMER_MelchiorPerfection_BeamZ, %AMER_MelchiorPerfection_BeamZModLeft)
		Add(%AMER_MelchiorPerfection_BeamX, %AMER_MelchiorPerfection_BeamXModLeft)
	ELIF "!c1&c2"
		IsLessThen(%AMER_MelchiorPerfection_BeamCount, INT:14)
		IsLessThen(%AMER_MelchiorPerfection_BeamCount, INT:42)
	THEN
		Add(%AMER_MelchiorPerfection_BeamZ, %AMER_MelchiorPerfection_BeamZModRight)
		Add(%AMER_MelchiorPerfection_BeamX, %AMER_MelchiorPerfection_BeamXModRight)
	ELIF "!c1&c2"
		IsLessThen(%AMER_MelchiorPerfection_BeamCount, INT:42)
		IsLessThen(%AMER_MelchiorPerfection_BeamCount, INT:70)
	THEN
		Add(%AMER_MelchiorPerfection_BeamZ, %AMER_MelchiorPerfection_BeamZModLeft)
		Add(%AMER_MelchiorPerfection_BeamX, %AMER_MelchiorPerfection_BeamXModLeft)
	ELIF "!c1&c2"
		IsLessThen(%AMER_MelchiorPerfection_BeamCount, INT:70)
		IsLessThen(%AMER_MelchiorPerfection_BeamCount, INT:98)
	THEN
		Add(%AMER_MelchiorPerfection_BeamZ, %AMER_MelchiorPerfection_BeamZModRight)
		Add(%AMER_MelchiorPerfection_BeamX, %AMER_MelchiorPerfection_BeamXModRight)
	ELSE
		Add(%AMER_MelchiorPerfection_BeamZ, %AMER_MelchiorPerfection_BeamZModLeft)
		Add(%AMER_MelchiorPerfection_BeamX, %AMER_MelchiorPerfection_BeamXModLeft)
	ENDIF
	Add(%AMER_MelchiorPerfection_BeamZ, %AMER_MelchiorPerfection_BeamZMod)
	Add(%AMER_MelchiorPerfection_BeamX, %AMER_MelchiorPerfection_BeamXMod)
	SetZ(%AMER_MelchiorPerfection_BeamPos, %AMER_MelchiorPerfection_BeamZ)
	SetX(%AMER_MelchiorPerfection_BeamPos, %AMER_MelchiorPerfection_BeamX)
	ItemTeleportTo(%AMER_DoBeamEffect_Item, %AMER_MelchiorPerfection_BeamPos)
	
	//Periodic explosions of random effects along the beam path.
	IF "c1"
		IsEqual(%AMER_MelchiorPerfection_BeamCount, _EffectCount)
	THEN
		GetRandom(_WhichEffect, "FX_Creatures_Skills_Dragon_Astral_FireBall_Impact_A", "FX_Skills_Water_GrenadeFrost_Impact_A", "FX_Creatures_Skills_Dragon_Astral_LightningBall_Impact_A", "FX_Creatures_Skills_Dragon_Astral_VoidBall_Impact_A", "FX_Skills_Earth_GrenadeTremor_Impact_A")
		PlayEffectAt(%AMER_MelchiorPerfection_BeamPos, _WhichEffect)
		Add(_EffectCount, INT:7)
		IF "c1"
			IsEqual(_EffectCount, _MaximumIterations)
		THEN
			GetPosition(__Me, _MyPos)
			IF "c1"
				GetY(_MyPos, _Y)
			THEN
				Add(_Y, 30.0)
			ELSE
				Set(_Y, 40.0)
			ENDIF
			
			SetY(_MyPos, _Y)
			ItemTeleportTo(%AMER_DoBeamEffect_Item, _MyPos)
			ItemTeleportTo(%AMER_DoBeamEffect_ItemSource, _MyPos)
			
			Set(_EffectCount, INT:0)
			StopTimer("AMER_MelchiorPerfection_MoveBeam")
		ENDIF
	ENDIF
	
	//End of Beam is the damage origin.
	IterateCharactersNear(%AMER_DoBeamEffect_Item, _DamageRadius, "AMER_MelchiorPerfection_DeathRayDamage")
	
	Add(%AMER_MelchiorPerfection_BeamCount, INT:1)
	
	
	
//====================================================//
//                 T I M E   S T O P                  //
//====================================================//
EVENT MelchiorPerfectionTimeStopEffects
VARS
	CHARACTER:_Char
ON
	OnIterateCharacter(_Char, "AMER_MelchiorPerfection_TimeStopEffects")
ACTIONS
	IF "!c1"
		IsEqual(_Char, __Me)
	THEN
		IF "!c1"
			CharacterIsDead(_Char)
		THEN
			StatusText(_Char, "AMER_STATUS_TimeStop")
			CharacterConsume(_Char, "AMER_STATUS_TimeStop")
		ENDIF
	ENDIF
	
	
	
EVENT MelchiorPerfectionTimeStopEnd
VARS
//===========================//
	FIXEDSTRING:_FlashAtmosphere = "Time Stop Flash"
	FIXEDSTRING:_ScaledEffect = "FX_Skills_Fire_Fireball_Impact_A"
	FLOAT:_FXScale = 3.0
//===========================//
	FLOAT3:_Pos
ON
	OnFunction("AMER_MelchiorPerfection_EndTimeStop")
ACTIONS
	
	GetPosition(%AMER_MelchiorPerfection_BeyondOrbBig, _Pos)
	Set(%AMER_DoScaledSFX_Point, _Pos)
	Set(%AMER_DoScaledSFX_Scale, _FXScale)
	Set(%AMER_DoScaledSFX_Effect, _ScaledEffect)
	CharacterEvent(__Me, "AMER_DoScaledSFX")
	
	SetAtmosphere(%AMER_MelchiorPerfection_Atmosphere, _FlashAtmosphere)
	//SetVisible(%AMER_MelchiorPerfection_BeyondOrbBig, INT:0)
	ItemSetOnStage(%AMER_MelchiorPerfection_BeyondOrbBig, INT:0)
	//ItemSetOnStage(%AMER_MelchiorPerfection_BeyondOrb, INT:1)
	//SetVisible(%AMER_MelchiorPerfection_BeyondOrb, INT:1)
	//Set(%AMER_DoMoveItem_Item, %AMER_MelchiorPerfection_BeyondOrb)
	//Set(%AMER_DoMoveItem_Trigger, %AMER_MelchiorPerfection_BeyondOrbMoveOrigin)
	//CharacterEvent(__Me, "AMER_DoMoveItem")
	StartTimer("AMER_MelchiorPerfection_TimeStopEndDelay", 1.0, 0)	//Delay for atmosphere flash before resetting.
	
	
	
EVENT MelchiorPerfectionTimeStopEndDelay
VARS
//===========================//
	FIXEDSTRING:_ScaledEffect = "FX_Creatures_Skills_Dragon_Astral_LightningBall_Impact_A"
//===========================//
ON
	OnTimer("AMER_MelchiorPerfection_TimeStopEndDelay")
ACTIONS
	//Position and scale is still good from calling function.
	Set(%AMER_DoScaledSFX_Effect, _ScaledEffect)
	CharacterEvent(__Me, "AMER_DoScaledSFX")
	//SetVisible(%AMER_MelchiorPerfection_BeyondOrb, INT:0)
	//ItemSetOnStage(%AMER_MelchiorPerfection_BeyondOrb, INT:0)
	ResetAtmosphere(%AMER_MelchiorPerfection_Atmosphere)
	
	
	
//====================================================//
//                   E N D   G A M E                  //
//====================================================//
EVENT MelchiorPerfectionEndgameTeleportParty
VARS
	CHARACTER:_Char
ON
	OnIterateCharacter(_Char, "AMER_MelchiorPerfection_EndgameTeleportParty")
ACTIONS
	IF "c1|c2"
		CharacterIsPlayer(_Char)
		IsEqual(_Char, __Me)
	THEN
		CharacterPlayEffect(_Char, "FX_GP_StarStone_Up_A")
		SetVisible(_Char, 0)
	ENDIF
	
	
	
EVENT MelchiorPerfectionEndgameSecondEffectIterator
VARS
	CHARACTER:_Char
ON
	OnIterateCharacter(_Char, "AMER_MelchiorPerfection_EndgameSecondEffectIterator")
ACTIONS
	IF "c1|c2"
		CharacterIsPlayer(_Char)
		IsEqual(_Char, __Me)
	THEN
		SetVisible(_Char, 1)
		CharacterPlayEffect(_Char, "FX_GP_StarStone_Down_A")
	ENDIF
	
	
	
//=====================================  B  E  H  A  V  I  O  R  ==========================================//
BEHAVIOUR
REACTION MelchiorPerfectionTimeStop, 0
USAGE COMBAT
VARS
//===========================//
	FIXEDSTRING:_Atmosphere = "Time Stop"
	FIXEDSTRING:_FlashAtmosphere = "Time Stop Flash"
	FIXEDSTRING:_ScaledEffect1 = "FX_Creatures_Skills_Dragon_Astral_LightningBall_Impact_A"
	FIXEDSTRING:_ScaledEffect2 = "FX_Skills_Fire_Fireball_Impact_A"
	FLOAT:_BallMoveSpeed = 2.0
	FLOAT:_BallMoveAcceleration = 0.0
	FLOAT:_FXScale = 2.0
	INT:_TimeStopLines = 5
	INT:_Duration = 2
//===========================//
	INT:_Rand
	INT:_Handle
	FLOAT3:_Pos
	STRING:_Str
	FIXEDSTRING:_Text
ACTIONS
	SetVar(__Me, "AMER_TimeoutDetection", INT:-10)	//Casting animations warrant extra time.
	
	GetRandomBetween(_Rand, INT:1, _TimeStopLines)
	Print(_Str, "AMER_CMB_MelchiorPerfection_TimeStop[1]", _Rand)
	Cast(_Text, _Str)
	DisplayCombatInfoText(__Me, "AMER_CMB_MelchiorPerfection_TimeStopCast", 0.0)
	DisplayCombatInfoText(__Me, _Text, 4.5)
	
	CharacterLookAt(%AMER_MelchiorPerfection_BeyondOrbBig)
	
	Sleep(1.0)
			
	CharacterPlayLoopEffect(_Handle, __Me, "FX_Skills_Warrior_Flurry_Prepare_A")
	CharacterPlayAnimation("skill_storm_start",1,1)
	CharacterPlayAnimation("skill_storm_loop",1,0)
	
	//Sleep(0.75)
	
	//ItemSetOnStage(%AMER_MelchiorPerfection_BeyondOrb, INT:1)
	//PlayEffectAt(%AMER_MelchiorPerfection_BeyondOrb, "FX_Creatures_Skills_Dragon_Astral_LightningBall_Impact_A")
	//SetVisible(%AMER_MelchiorPerfection_BeyondOrb, INT:1)
	//Set(%AMER_DoMoveItem_Item, %AMER_MelchiorPerfection_BeyondOrb)
	//Set(%AMER_DoMoveItem_Trigger, %AMER_MelchiorPerfection_BeyondOrbMoveTo)
	//CharacterEvent(__Me, "AMER_DoMoveItem")
	
	Sleep(2.75)
	
	CharacterPlayAnimation("skill_storm_cast", 1, 0)
	CharacterPlayEffect(__Me, "FX_Skills_Air_Storm_Cast_A")
	
	Sleep(2.75)
	
	//TIME STOP EFFECTS
	
	Set(%AMER_MelchiorPerfection_TimeStopDuration, _Duration)
	//GetPosition(%AMER_MelchiorPerfection_BeyondOrbBig, _Pos)
	GetPosition(__Me, _Pos)
	Set(%AMER_DoScaledSFX_Point, _Pos)
	Set(%AMER_DoScaledSFX_Scale, _FXScale)
	Set(%AMER_DoScaledSFX_Effect, _ScaledEffect1)
	CharacterEvent(__Me, "AMER_DoScaledSFX")
	
	Sleep(0.1)	//Give story a short wait to handle the event before sending another.
	
	Set(%AMER_DoScaledSFX_Effect, _ScaledEffect2)
	CharacterEvent(__Me, "AMER_DoScaledSFX")
	
	SetAtmosphere(%AMER_MelchiorPerfection_Atmosphere, _FlashAtmosphere)
	//SetVisible(%AMER_MelchiorPerfection_BeyondOrb, INT:0)
	//ItemSetOnStage(%AMER_MelchiorPerfection_BeyondOrb, INT:0)
	ItemSetOnStage(%AMER_MelchiorPerfection_BeyondOrbBig, INT:1)
	//SetVisible(%AMER_MelchiorPerfection_BeyondOrbBig, INT:1)
	IterateCharactersInCombat(__Me, "AMER_MelchiorPerfection_TimeStopEffects")
	
	Sleep(0.4)
	
	SetAtmosphere(%AMER_MelchiorPerfection_Atmosphere, _Atmosphere)
	
	
	Add(%AMER_MelchiorPerfection_TimeStopsCast, INT:1)
	Set(%AMER_MelchiorPerfection_TimeStopAllowed, INT:0)
	StopLoopEffect(_Handle)
	
	//Casting Timestop consumes all AP.
	SetVar(__Me, "AMER_RemoveCurrentAPAmount", FLOAT:-1.0)
	SetVar(__Me, "AMER_RemoveCurrentAPTarget", __Me)
	CallFunction("AMER_RemoveCurrentAP")
	
	SetPriority(MelchiorPerfectionTimeStop, 0)
	
	
	
REACTION MelchiorPerfectionVoidZones, 0
USAGE COMBAT
VARS
//===========================//
	INT:_SupportedVoidZones = 108
	INT:_VoidZonesSpawned = 6
//===========================//
	INT:_Count
ACTIONS
	SetVar(__Me, "AMER_TimeoutDetection", INT:-10)	//Casting animations warrant extra time.
	
	Sleep(0.75)
	
	CharacterPlayAnimation("skill_airshield_cast", 1, 0)
	
	Sleep(0.50)
	
	Set(_Count, INT:0)
	WHILE "!c1&c2"
		IsGreaterThen(%AMER_MelchiorPerfection_VoidZoneIndex, _SupportedVoidZones)
		IsLessThen(_Count, _VoidZonesSpawned)
	DO
		CallFunction("AMER_MelchiorPerfection_CreateVoidZone")
		Add(_Count, INT:1)
	ENDWHILE
	
	CallFunction("AMER_MelchiorPerfection_RemoveDiscZones")
	CallFunction("AMER_MelchiorPerfection_DiscZones")
	
	SetPriority(MelchiorPerfectionVoidZones, 0)
	
	
	
REACTION MelchiorPerfectionFragments, 0
USAGE COMBAT
VARS
//===========================//
	INT:_FragmentIndexes = 4
	INT:_FragmentsPerCast = 3
	INT:_SpawnAddsFrequency = 2
//===========================//
	INT:_Count
	STRING:_Str
	FIXEDSTRING:_Text
ACTIONS
	SetVar(__Me, "AMER_TimeoutDetection", INT:-10)	//Casting animations warrant extra time.
	Set(_FragmentsPerCast, INT:4)	//Patch 1.1.7
	
	Sleep(0.75)
	
	CharacterPlayAnimation("skill_airshield_cast", 1, 0)
	
	Sleep(0.50)
	
	Set(_Count, INT:0)
	WHILE "c1"
		IsLessThen(_Count, _FragmentsPerCast)
	DO
		CallFunction("AMER_MelchiorPerfection_SpawnAdds")
		Add(_Count, INT:1)
		Add(%AMER_MelchiorPerfection_AddCount, INT:1)
		IF "c1"
			IsEqual(%AMER_MelchiorPerfection_AddCount, _FragmentIndexes)
		THEN
			Set(%AMER_MelchiorPerfection_AddCount, INT:0)
		ENDIF
	ENDWHILE
	
	
	Set(%AMER_MelchiorPerfection_SpawnAddsCountdown, _SpawnAddsFrequency)
	
	SetPriority(MelchiorPerfectionFragments, 0)
	
	
	
REACTION MelchiorPerfectionDeathRay, 0
USAGE COMBAT
VARS
//===========================//
	FIXEDSTRING:_Atmosphere = "Death Ray"
	INT:_DeathRayPoints = 112
	INT:_DeathRayLines = 5
//===========================//
	FLOAT3:_TargetPos
	FLOAT3:_MyPos
	FLOAT3:_Forward
	FLOAT3:_Angle
	FLOAT:_X
	FLOAT:_Z
	FLOAT:_Y
	FLOAT:_XMod
	FLOAT:_ZMod
	FLOAT:_XModInitial
	FLOAT:_ZModInitial
	INT:_Rand
	INT:_Handle
	//INT:_BeamTipHandle
	INT:_Count
	STRING:_Str
	FIXEDSTRING:_Text
ACTIONS
	//See if a valid target can be found
	Set(%AMER_MelchiorPerfection_TargetChar, null)
	IterateCharactersInCombat(__Me, "AMER_MelchiorPerfection_FindDeathRayTarget")
	IF "!c1"
		IsEqual(%AMER_MelchiorPerfection_TargetChar, null)
	THEN
		SetVar(__Me, "AMER_TimeoutDetection", INT:-10)	//Casting animations warrant extra time.
		
		Set(%AMER_MelchiorPerfection_LastRayTarget, %AMER_MelchiorPerfection_TargetChar)
		CharacterLookAt(%AMER_MelchiorPerfection_TargetChar)
			
		Sleep(1.0)
		
		GetPosition(__Me, _MyPos)
		IF "c1&c2&c3"
			GetX(_MyPos, _X)
			GetZ(_MyPos, _Z)
			GetY(_MyPos, _Y)
		THEN
			GetRandomBetween(_Rand, INT:1, _DeathRayLines)
			Print(_Str, "AMER_CMB_MelchiorPerfection_DeathRay[1]", _Rand)
			Cast(_Text, _Str)
			DisplayCombatInfoText(__Me, "AMER_CMB_MelchiorPerfection_DeathRayCast", 0.0)
			DisplayCombatInfoText(__Me, _Text, 3.5)
			
			CharacterPlayLoopEffect(_Handle, __Me, "FX_Skills_Warrior_Flurry_Prepare_A")
			CharacterPlayAnimation("cast_touch_start",1,1)
			CharacterPlayAnimation("cast_touch_loop",1,1)
			CharacterPlayAnimation("cast_touch_cast",1,0)
			
			//Small wait for animation drama.
			Sleep(0.9)
			
			CharacterPlayEffect(__Me, "FX_Skills_Warrior_Flurry_Cast_A")
			
			//Do a set animation, regardless of distance.
			GetForwardDirection(__Me, _Forward)
			IF "c1&c2"
				GetZ(_Forward, _ZMod)
				GetX(_Forward, _XMod)
			THEN
				Set(_TargetPos, _MyPos)
				
				Set(_ZModInitial, _ZMod)
				Set(_XModInitial, _XMod)
				Multiply(_ZModInitial, 4.0)
				Multiply(_XModInitial, 4.0)
				Multiply(_ZMod, 0.4)
				Multiply(_XMod, 0.4)
				
				Add(_Z, _ZModInitial)
				Add(_X, _XModInitial)
				SetZ(_TargetPos, _Z)
				SetX(_TargetPos, _X) 
				
				Set(%AMER_MelchiorPerfection_BeamXMod, _XMod)
				Set(%AMER_MelchiorPerfection_BeamZMod, _ZMod)
				Set(%AMER_MelchiorPerfection_BeamX, _X)
				Set(%AMER_MelchiorPerfection_BeamZ, _Z)
				
				GetRightDirection(__Me, _Angle)
				IF "c1&c2"
					GetZ(_Angle, _ZMod)
					GetX(_Angle, _XMod)
				THEN
					Multiply(_ZMod, 0.6)
					Multiply(_XMod, 0.6)
					Set(%AMER_MelchiorPerfection_BeamXModRight, _XMod)
					Set(%AMER_MelchiorPerfection_BeamZModRight, _ZMod)
					
					RotateY(_Angle, 180.0)
					IF "c1&c2"
						GetZ(_Angle, _ZMod)
						GetX(_Angle, _XMod)
					THEN
						Multiply(_ZMod, 0.6)
						Multiply(_XMod, 0.6)
						Set(%AMER_MelchiorPerfection_BeamXModLeft, _XMod)
						Set(%AMER_MelchiorPerfection_BeamZModLeft, _ZMod)
				
						Add(_Y, 2.0)
						SetY(_MyPos, _Y)
						ItemTeleportTo(%AMER_DoBeamEffect_Item, _TargetPos)
						ItemTeleportTo(%AMER_DoBeamEffect_ItemSource, _MyPos)
						CharacterEvent(__Me, "AMER_DoBeamEffectItemToItem")
					ENDIF
				ENDIF
				Set(%AMER_MelchiorPerfection_BeamPos, _TargetPos)
				Set(%AMER_MelchiorPerfection_BeamCount, INT:0)
				StartTimer("AMER_MelchiorPerfection_MoveBeam", 0.01, -1)
			
				//Don't change atmosphere during Timestop.
				IF "c1"
					IsEqual(%AMER_MelchiorPerfection_TimeStopDuration, INT:0)
				THEN
					SetAtmosphere(%AMER_MelchiorPerfection_Atmosphere, _Atmosphere)
					Sleep(2.5)
					ResetAtmosphere(%AMER_MelchiorPerfection_Atmosphere)
				ELSE
					Sleep(2.5)
				ENDIF
				
				StopLoopEffect(_Handle)
				
				Sleep(2.5)
			ENDIF
		ENDIF
	ELSE
		Set(%AMER_MelchiorPerfection_LastRayTarget, null)
	ENDIF
	
	SetPriority(MelchiorPerfectionDeathRay, 0)
	
	
	
REACTION MelchiorPerfectionEndRoutine, 0
USAGE ALL
VARS
ACTIONS
	SetVar(__Me, "AMER_TimeoutDetection", INT:-10)	//Casting animations warrant extra time.
	CharacterSetInvulnerable(__Me, 1)
	DisplayText(__Me, "AMER_CMB_MelchiorPerfection_Defeat1", 5.0)
	CharacterPlayAnimation("0_stillcrippled", 0, 0)
	
	Sleep(5.0)
	
	IterateCharactersInCombat(__Me, "AMER_MelchiorPerfection_EndgameTeleportParty")
	
	Sleep(0.8)
	
	CharacterSetFaction(__Me, "Good NPC")
	CharacterEvent(__Me, "AMER_Melchior_Endgame")
	
	Sleep(1.2)
	
	IterateCharactersNear(__Me, 20.0, "AMER_MelchiorPerfection_EndgameSecondEffectIterator")
	CharacterPlayAnimation("knockdown_fall", 0, 0)
	
	Sleep(1.7)
	
	CharacterPlayEffect(__Me, "FX_Skills_Air_Storm_Impact_A")
	PlayEffectAt(__Me, "FX_Creatures_Skills_Dragon_Astral_LightningBall_Impact_A")
	StartTimer("AMER_MelchiorPerfection_Lootsplosion", 0.15, -1)
	
	Sleep(0.6)
	
	SetVisible(__Me, 0)
	
	SetPriority(MelchiorPerfectionEndRoutine, 0)
	
	
	
//===============================================//
//                                               //
//   M E L C H I O R ' S   P E R F E C T I O N   //
//                                               //
//===============================================//