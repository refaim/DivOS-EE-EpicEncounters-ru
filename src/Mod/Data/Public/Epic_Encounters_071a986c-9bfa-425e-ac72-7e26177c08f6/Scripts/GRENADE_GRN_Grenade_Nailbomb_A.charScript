#TEMPLATE "_SKILLFROMITEM_Base" : GRN_Grenade_Nailbomb_A, null

INIT
CHARACTER:__Me
FLOAT:%SkillTargetScore_GRN_Grenade_Nailbomb_A=-1000000
// [GLOBAL_VARS]
EXTERN FLOAT:%GRN_Grenade_Nailbomb_A_ResistanceLimit = 90
FLOAT:%GRN_Grenade_Nailbomb_A_SplashScore = 0.0
// [~GLOBAL_VARS]

EVENTS

// [EVENTS]
// [~EVENTS]

// Calculate the priority of the skill
EVENT CalculateScore_GRN_Grenade_Nailbomb_A
VARS
	// [CALC_VARS]
	FLOAT:_SkillRangeMin
	FLOAT:_SkillRangeMax
	FLOAT:_SkillImpactRange
	FLOAT3:_TargetPos
	// [~CALC_VARS]
ON
	OnFunction("CalculateScore_GRN_Grenade_Nailbomb_A")
ACTIONS
	//Don't bother using Grenade if it's a bad target. So set
	//score to zero here instead of -million.
	Set(%SkillTargetScore_GRN_Grenade_Nailbomb_A, 0.0)

	// [CALC_ACTIONS_PRE]
	// [~CALC_ACTIONS_PRE]
	// [CALC_ACTIONS]
	IF "c1&c2"
	    CharacterGetSkillRange(_SkillRangeMin, _SkillRangeMax, __Me, %SkillID_GRN_Grenade_Nailbomb_A)
	    CharacterGetSkillImpactRange(_SkillImpactRange, __Me, %SkillID_GRN_Grenade_Nailbomb_A)
	THEN
		IF "c1"
			FindPosition(_TargetPos, __Me, _SkillRangeMax, _SkillImpactRange, __Me, -1, 0, 4, -1)
		THEN
		    Set(%SkillTargetPos_GRN_Grenade_Nailbomb_A, _TargetPos)
		    Add(%ActionScore_GRN_Grenade_Nailbomb_A, 20.0)
		ELIF "c1"
			FindPosition(_TargetPos, __Me, _SkillRangeMax, _SkillImpactRange, __Me, -1, 0, 3, -1)
		THEN
		    Set(%SkillTargetPos_GRN_Grenade_Nailbomb_A, _TargetPos)
		    Add(%ActionScore_GRN_Grenade_Nailbomb_A, 20.0)
		ELIF "c1"
			FindPosition(_TargetPos, __Me, _SkillRangeMax, _SkillImpactRange, __Me, -1, 0, 2, -1)
		THEN
		    Set(%SkillTargetPos_GRN_Grenade_Nailbomb_A, _TargetPos)
		    Add(%ActionScore_GRN_Grenade_Nailbomb_A, 20.0)
		ELSE
		    IterateCharactersInCombat(__Me, "CalculateTarget_GRN_Grenade_Nailbomb_A", Lowest, Vitality)
		    IF "!c1&c2"
				IsEqual(%SkillTargetChar_GRN_Grenade_Nailbomb_A, null)
				IsGreaterThen(%SkillTargetScore_GRN_Grenade_Nailbomb_A, 0.0)
		    THEN
				Add(%ActionScore_GRN_Grenade_Nailbomb_A, %SkillTargetScore_GRN_Grenade_Nailbomb_A)
		    ENDIF
		ENDIF
	ENDIF
	// [~CALC_ACTIONS]
	
	
	
EVENT SplashScore_GRN_Grenade_Nailbomb_A
VARS
	CHARACTERSTAT:_ResistType = PiercingResistance
	CHARACTER:_SplashChar
	FLOAT:_Resistance
	FLOAT:_SplashScore
ON
	OnIterateCharacter(_SplashChar, "SplashScore_GRN_Grenade_Nailbomb_A")
ACTIONS
	IF "!c1"
		CharacterIsDead(_SplashChar)
	THEN
		Set(_SplashScore, 0.0)
		IF "c1"
			CharacterGetStat(_Resistance, _SplashChar, _ResistType)
		THEN
			//Use Resistance as a score modifier.
			Divide(_Resistance, -100.0)
			Set(_SplashScore, _Resistance)
		ELSE
			Set(_Resistance, 0.0)
		ENDIF
		
		//If it is an enemy.
		IF "(!c1&!c2)|(c3&c4)"
			CharacterIsAlly(__Me, _SplashChar)
			CharacterHasStatus(_SplashChar CHARMED)
			CharacterIsAlly(__Me, _SplashChar)
			CharacterHasStatus(_SplashChar CHARMED)
		THEN
			IF "c1"
				CharacterIsSummon(_SplashChar)
			THEN
				IF "!c1"
					CharacterHasStatus(_SplashChar CHARMED)
				THEN
					Add(%GRN_Grenade_Nailbomb_A_SplashScore, _SplashScore)
				ENDIF
			ELSE
				Multiply(_SplashScore, 5.0)
				Add(%GRN_Grenade_Nailbomb_A_SplashScore, _SplashScore)
			ENDIF
		//If it is an ally.
		ELIF "!c1"
			CharacterIsSummon(_SplashChar)
		THEN
			Multiply(_SplashScore, -4.0)
			Add(%GRN_Grenade_Nailbomb_A_SplashScore, _SplashScore)
		ENDIF
	ENDIF

	
	
// Calculate the character we should attack
EVENT CalculateTarget_GRN_Grenade_Nailbomb_A
VARS	
	CHARACTER:_Char
	// [CALC_TARGET_VARS]
	FLOAT:_Score
	FLOAT:_HostileScore=0
	FLOAT:_SkillRangeMin
	FLOAT:_SkillRangeMax
	FLOAT:_DistanceToChar
	FLOAT:_DistanceScore
	FLOAT:_StatResistance
	FLOAT:_Vitality
	FLOAT:_Radius
	CHARACTERSTAT:_ResistType = PiercingResistance
	// [~CALC_TARGET_VARS]
ON
	OnIterateCharacter(_Char, "CalculateTarget_GRN_Grenade_Nailbomb_A")	
ACTIONS
	// [CALC_CHAR_TARGET_ACTIONS_PRE]
	Set(_Score, 0.0)
	// [~CALC_CHAR_TARGET_ACTIONS_PRE]
	// [CALC_CHAR_TARGET_ACTIONS]
	IF "c1"
	    CharacterIsEnemy(__Me, _Char)
	THEN
		IF "!c1"
			CharacterIsDead(_Char)
		THEN
			IF "!c1&!c2"
			    CharacterHasStatus(_Char, INVISIBLE)
			    CharacterHasStatus(_Char, SNEAKING)
			THEN
				IF "!c1|!c2"
				    CharacterGetStat(_StatResistance, _Char, _ResistType)
				    IsGreaterThen(_StatResistance, %GRN_Grenade_Nailbomb_A_ResistanceLimit)
				THEN
					IF "!c1"
						CharacterHasStatus(_Char, CHARMED)
					THEN
						IF "!c1"
							CharacterHasStatus(_Char, INVULNERABLE)
						THEN
							//Kill range calculation
							IF "c1"
								CharacterGetStat(_Vitality,  _Char, Vitality)
							THEN
								//Favor low vitality targets.
								Multiply(_Vitality, -1.0)
								Add(_Vitality, 1.0)
								Multiply(_Vitality, 5.0)
								Add(_Score, _Vitality)
							ENDIF
							
							//Marked.
						    IF "c1"
								CharacterHasStatus(_Char, AGGRO_MARKED)
						    THEN
								Add(_Score, 1.0)
						    ENDIF
							
							//Splash score calc.
							IF "c1"
								CharacterGetSkillImpactRange(_Radius, __Me, %SkillID_GRN_Grenade_Nailbomb_A)
							THEN
								Set(%GRN_Grenade_Nailbomb_A_SplashScore, 0.0)
								IterateCharactersNear(_Char, _Radius, "SplashScore_GRN_Grenade_Nailbomb_A")
								Add(_Score, %GRN_Grenade_Nailbomb_A_SplashScore)
							ENDIF
							
							//Resistance calculation
							Divide(_StatResistance, -100.0)
							Multiply(_StatResistance, 5.0)
							Add(_Score, _StatResistance)
								
							//Summons are worth less.
							IF "c1"
								CharacterIsSummon(_Char)
							THEN
								Add(_Score, -5.0)
							ENDIF
							
						    // Range score calculation
							IF "c1&c2"
							    CharacterGetSkillRange(_SkillRangeMin, _SkillRangeMax, __Me, %SkillID_GRN_Grenade_Nailbomb_A)
							    GetDistance(_DistanceToChar, __Me, _Char)
							THEN
							    Set(_DistanceScore, _DistanceToChar)
							    IF "c1"
									IsGreaterThen(_DistanceScore, _SkillRangeMax)
							    THEN
									Subtract(_DistanceScore, _SkillRangeMax)
									Multiply(_DistanceScore, -1.0)
							    ELIF "c1"
									IsLessThen(_DistanceScore, _SkillRangeMin)
							    THEN
									Subtract(_DistanceScore, _SkillRangeMin)
									Multiply(_DistanceScore, 1.0)
							    ELSE 
									Set(_DistanceScore, 0.0)
							    ENDIF
								Add(_Score, _DistanceScore)
							ENDIF
						    
						    // Can see score calculation
						    IF "!c1"
								CharacterCanSee(__Me, _Char)
						    THEN
								Add(_Score, -10.0)
						    ENDIF
						    
							IF "c1"
								IsGreaterThen(_Score, %SkillTargetScore_GRN_Grenade_Nailbomb_A)
							THEN
								Set(%SkillTargetChar_GRN_Grenade_Nailbomb_A, _Char)
								Set(%SkillTargetScore_GRN_Grenade_Nailbomb_A, _Score)
							ENDIF
						ENDIF
					ENDIF
				ENDIF
			ENDIF
		ENDIF
	ENDIF
	// [~CALC_CHAR_TARGET_ACTIONS]
	
	
	
	
	
	
	
	
	