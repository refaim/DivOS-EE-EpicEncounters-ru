#TEMPLATE "_SKILL_Base" : AMER_SKILL_Erosion

INIT
CHARACTER:__Me
// [GLOBAL_VARS]
INT:%AMER_SKILL_Erosion_PreAffectedTargets
// [~GLOBAL_VARS]

EVENTS

// [EVENTS]
// [~EVENTS]

// Calculate the priority of the skill
EVENT CalculateScore_AMER_SKILL_Erosion
VARS
	// [CALC_VARS]
	FLOAT:_SkillRangeMin
	FLOAT:_SkillRangeMax
	FLOAT:_SkillImpactRange
	FLOAT3:_TargetPos
	// [~CALC_VARS]
ON
	OnFunction("CalculateScore_AMER_SKILL_Erosion")
ACTIONS

	// [CALC_ACTIONS_PRE]
	// [~CALC_ACTIONS_PRE]
	// [CALC_ACTIONS]
	
	//Check if there are any non-summons unaffected by this debuff. If some are,
	//just cast it on the closest non-summon.
	Set(%AMER_SKILL_Erosion_PreAffectedTargets, INT:0)
	IterateCharactersInCombat(__Me, "AMER_SKILL_Erosion_CheckForReapply", Highest, Distance)
	
	//If no non-summons were affected by this debuff, cast it wherever there are the most targets affected.
	IF "c1&c2&c3"
	    CharacterGetSkillRange(_SkillRangeMin, _SkillRangeMax, __Me, AMER_SKILL_Erosion) // c1
	    CharacterGetSkillImpactRange(_SkillImpactRange, __Me, AMER_SKILL_Erosion) // c2
		IsEqual(%AMER_SKILL_Erosion_PreAffectedTargets, INT:0)
	THEN
		IF "c1"
			FindPosition(_TargetPos, __Me, _SkillRangeMax, _SkillImpactRange, __Me, -1, -1, 4, -1) // c3
		THEN
		    Set(%SkillTargetPos_AMER_SKILL_Erosion, _TargetPos)
		    Add(%ActionScore_AMER_SKILL_Erosion, 20.0)
		ELIF "c1"
			FindPosition(_TargetPos, __Me, _SkillRangeMax, _SkillImpactRange, __Me, -1, -1, 3, -1) // c3
		THEN
		    Set(%SkillTargetPos_AMER_SKILL_Erosion, _TargetPos)
		    Add(%ActionScore_AMER_SKILL_Erosion, 20.0)
		ELIF "c1"
			FindPosition(_TargetPos, __Me, _SkillRangeMax, _SkillImpactRange, __Me, -1, -1, 2, -1) // c3
		THEN
		    Set(%SkillTargetPos_AMER_SKILL_Erosion, _TargetPos)
		    Add(%ActionScore_AMER_SKILL_Erosion, 20.0)
		ENDIF
	ENDIF
	// [~CALC_ACTIONS]
	
	
EVENT AMER_SKILL_Erosion_CheckForReapply
VARS
	CHARACTER:_Char
ON
	OnIterateCharacter(_Char, "AMER_SKILL_Erosion_CheckForReapply")
ACTIONS
	IF "c1"
		CharacterIsEnemy(__Me, _Char)
	THEN
		IF "c1"
			CharacterHasStatus(_Char, CONSUME, AMER_Erosion)
		THEN
			IF "!c1"
				CharacterIsSummon(_Char)
			THEN
				Set(%AMER_SKILL_Erosion_PreAffectedTargets, INT:1)
			ENDIF
		ELIF "!c1&c2"
			CharacterIsSummon(_Char)
			IsEqual(%AMER_SKILL_Erosion_PreAffectedTargets, INT:1)
		THEN
			Set(%SkillTargetChar_AMER_SKILL_Erosion, _Char)
		    Set(%ActionScore_AMER_SKILL_Erosion, 20.0)
		ENDIF
	ENDIF
	
	
	
	
	