//===============================================//
//                                               //
//         S P A W N   O N   C O M B A T         //
//                                               //
//     Written by Matteo "Ameranth" T. (2016)    //
//===============================================//
INIT
CHARACTER:__Me
EXTERN STRING:%AMER_SpawnOnCombat_FX = null
EXTERN FIXEDSTRING:%AMER_SpawnOnCombat_FXBone = null
EXTERN CHARACTERTEMPLATE:%AMER_SpawnOnCombat_RootGUID1 = null
EXTERN CHARACTERTEMPLATE:%AMER_SpawnOnCombat_RootGUID2 = null
EXTERN CHARACTERTEMPLATE:%AMER_SpawnOnCombat_RootGUID3 = null
EXTERN CHARACTERTEMPLATE:%AMER_SpawnOnCombat_RootGUID4 = null
EXTERN CHARACTERTEMPLATE:%AMER_SpawnOnCombat_RootGUID5 = null
EXTERN TRIGGER:%AMER_SpawnOnCombat_PointGUID1 = null
EXTERN TRIGGER:%AMER_SpawnOnCombat_PointGUID2 = null
EXTERN TRIGGER:%AMER_SpawnOnCombat_PointGUID3 = null
EXTERN TRIGGER:%AMER_SpawnOnCombat_PointGUID4 = null
EXTERN TRIGGER:%AMER_SpawnOnCombat_PointGUID5 = null
EXTERN INT:%AMER_SpawnOnCombat_PlaySpawnAnim = 1
EXTERN INT:%AMER_SpawnOnCombat_IsSummon = 0
EXTERN INT:%AMER_SpawnOnCombat_LevelOverride = -1
EXTERN INT:%AMER_SpawnOnCombat_PossibleOccurances = 1
EXTERN INT:%AMER_SpawnOnCombat_AddSpawnToCombat = 0
EXTERN CHARACTER:%AMER_SpawnOnCombat_OwnerOverride = null
INT:%AMER_SpawnOnCombat_Occurances
	
EVENTS
EVENT SpawnOnCombat
VARS
//==========================//
	INT:_SupportedSpawns = 5
//==========================//
	CHARACTER:_Spawn
	INT:_Count
	FLOAT:_SourceLevel
	INT:_Level
	CHARACTERTEMPLATE:_Root
	TRIGGER:_Point
	FLOAT3:_Position
	SKILL:_GroupCombat = "AMER_SCRIPTSKILL_GroupCombat"
ON
	OnCombatStarted()
ACTIONS
	IF "c1"
		IsEqual(%AMER_SpawnOnCombat_Occurances, null)
	THEN
		Set(%AMER_SpawnOnCombat_Occurances, INT:0)
	ENDIF
	
	IF "c1&c2"
		CharacterGetStat(_SourceLevel, __Me, Level)
		IsGreaterThen(%AMER_SpawnOnCombat_PossibleOccurances, %AMER_SpawnOnCombat_Occurances)
	THEN
		//Get the level of __Me to give to the spawn, if a level
		//override was given, use that instead.
		Cast(_Level, _SourceLevel)
		IF "!c1"
			IsEqual(%AMER_SpawnOnCombat_LevelOverride, INT:-1)
		THEN
			Set(_Level, %AMER_SpawnOnCombat_LevelOverride)
		ENDIF
		
		Set(_Count, INT:0)
		WHILE "c1"
			IsLessThen(_Count, _SupportedSpawns)
		DO
			//Find the given Root GUID and the Point GUID for each spawn.
			GetElement(_Root, _Count, %AMER_SpawnOnCombat_RootGUID1, %AMER_SpawnOnCombat_RootGUID2, %AMER_SpawnOnCombat_RootGUID3, %AMER_SpawnOnCombat_RootGUID4, %AMER_SpawnOnCombat_RootGUID5)
			GetElement(_Point, _Count, %AMER_SpawnOnCombat_PointGUID1, %AMER_SpawnOnCombat_PointGUID2, %AMER_SpawnOnCombat_PointGUID3, %AMER_SpawnOnCombat_PointGUID4, %AMER_SpawnOnCombat_PointGUID5)
			
			//If we had a Root GUID for this spawn, make it.
			IF "!c1"
				IsEqual(_Root, null)
			THEN
				//If we were not given a point to spawn at, use __Me as the position.
				IF "c1"
					IsEqual(_Point, null)
				THEN
					GetPosition(__Me, _Position)
				ELSE
					GetPosition(_Point, _Position)
				ENDIF

				//If IsSummon was zero, then make the spawn normally. Otherwise, check if an owner override was given
				//If no override was given, assume that the summon owner is __Me.
				IF "c1"
					IsEqual(%AMER_SpawnOnCombat_IsSummon, INT:0)
				THEN
					SpawnCharacter(_Spawn, _Root, _Position, %AMER_SpawnOnCombat_PlaySpawnAnim, INT:0, null, _Level)
				ELIF "c1&!c2"
					IsEqual(%AMER_SpawnOnCombat_IsSummon, INT:1)
					IsEqual(%AMER_SpawnOnCombat_OwnerOverride, null)
				THEN
					SpawnCharacter(_Spawn, _Root, _Position, %AMER_SpawnOnCombat_PlaySpawnAnim, INT:1, %AMER_SpawnOnCombat_OwnerOverride, _Level)
				ELIF "c1&c2"
					IsEqual(%AMER_SpawnOnCombat_IsSummon, INT:1)
					IsEqual(%AMER_SpawnOnCombat_OwnerOverride, null)
				THEN
					SpawnCharacter(_Spawn, _Root, _Position, %AMER_SpawnOnCombat_PlaySpawnAnim, INT:1, __Me, _Level)
				ENDIF
				
				//Force the spawns into combat if they're supposed to.
				IF "c1"
					IsEqual(%AMER_SpawnOnCombat_AddSpawnToCombat, INT:1)
				THEN
					SetVar(__Me, "AMER_RemoteEffectProjectile", _GroupCombat)
					SetVar(__Me, "AMER_RemoteEffectSource", _Spawn)
					SetVar(__Me, "AMER_RemoteEffectSourceAsTarget", INT:1)
					CallFunction("AMER_DoRemoteEffect")
				ENDIF
				
				//If there is a special effect to play, do it.
				IF "!c1"
					IsEqual(%AMER_SpawnOnCombat_FX, null)
				THEN
					IF "c1"
						IsEqual(%AMER_SpawnOnCombat_FXBone, null)
					THEN
						CharacterPlayEffect(_Spawn, %AMER_SpawnOnCombat_FX)
					ELSE
						CharacterPlayEffect(_Spawn, %AMER_SpawnOnCombat_FX, %AMER_SpawnOnCombat_FXBone)
					ENDIF
				ENDIF
			ENDIF
			
			Add(_Count, INT:1)
		ENDWHILE
		
		//Subtract(%AMER_SpawnOnCombat_PossibleOccurances, INT:1)
		Add(%AMER_SpawnOnCombat_Occurances, INT:1)
	ENDIF
	
	
	
EVENT SpawnOnCombatCombatEnded
ON
	OnCombatEnded()
ACTIONS
	IF "!c1"
		CharacterIsDead(__Me)
	THEN
		IterateCharactersNear(__Me, 30.0, "AMER_SpawnOnCombat_Cleanup")
	ENDIF
	
	
	
EVENT SpawnOnCombatCleanup
VARS
	CHARACTER:_Char
	CHARACTER:_Owner
ON
	OnIterateCharacter(_Char, "AMER_SpawnOnCombat_Cleanup")
ACTIONS
	IF "c1&c2"
		CharacterGetOwner(_Owner, _Char)
		IsEqual(_Owner, __Me)
	THEN
		CharacterDestroy(_Char)
	ENDIF
	
//===============================================//
//                                               //
//         S P A W N   O N   C O M B A T         //
//                                               //
//===============================================//