#TEMPLATE "_SKILL_Base" : AMER_SKILL_InsectPlague
	
INIT
CHARACTER:__Me
FLOAT:%SkillTargetScore_AMER_SKILL_InsectPlague=-1000000
// [GLOBAL_VARS]
FLOAT:%AMER_SKILL_InsectPlague_SplashScore
// [~GLOBAL_VARS]
	
EVENTS
	
// [EVENTS]
// [~EVENTS]
	
// Calculate the priority of the skill
EVENT CalculateScore_AMER_SKILL_InsectPlague
VARS
	// [CALC_VARS]
	FLOAT:_SkillRangeMin
	FLOAT:_SkillRangeMax
	FLOAT3:_TargetPos
	// [~CALC_VARS]
ON
	OnFunction("CalculateScore_AMER_SKILL_InsectPlague")
ACTIONS
	Set(%SkillTargetScore_AMER_SKILL_InsectPlague, -1000000)

	// [CALC_ACTIONS_PRE]
	// [~CALC_ACTIONS_PRE]
	// [CALC_ACTIONS]
	IterateCharactersInCombat(__Me, "CalculateTarget_AMER_SKILL_InsectPlague", Highest, Vitality)
	IF "!c1"
		IsEqual(%SkillTargetChar_AMER_SKILL_InsectPlague, null)
	THEN
		Add(%ActionScore_AMER_SKILL_InsectPlague, %SkillTargetScore_AMER_SKILL_InsectPlague)
	ENDIF
	// [~CALC_ACTIONS]
	
	
	
EVENT SplashScore_AMER_SKILL_InsectPlague
VARS
	ABILITY:_SaveType = BodyBuilding
	CHARACTER:_Char
	INT:_SaveAmount
	FLOAT:_SaveScore
	FLOAT:_Vitality
ON
	OnIterateCharacter(_Char, "SplashScore_AMER_SKILL_InsectPlague")
ACTIONS
	IF "c1"
		CharacterIsEnemy(__Me, _Char)
	THEN
		IF "!c1"
			CharacterIsDead(_Char)
		THEN
			IF "!c1"
				CharacterHasStatus(_Char, CHARMED)
			THEN
				IF "!c1"
					CharacterHasStatus(_Char, INVULNERABLE)
				THEN
					//Kill range calculation
					IF "c1"
						CharacterGetStat(_Vitality,  _Char, Vitality)
					THEN
						//Favor high vitality targets.
						Multiply(_Vitality, 0.4)
						Add(%AMER_SKILL_InsectPlague_SplashScore, _Vitality)
					ENDIF
					
					//Marked.
					IF "c1"
						CharacterHasStatus(_Char, AGGRO_MARKED)
					THEN
						Add(%AMER_SKILL_InsectPlague_SplashScore, 0.4)
					ENDIF
					
					//Summons are worth less.
					IF "c1"
						CharacterIsSummon(_Char)
					THEN
						Add(%AMER_SKILL_InsectPlague_SplashScore, 1.0)
					ELSE
						Add(%AMER_SKILL_InsectPlague_SplashScore, 5.0)
					
						//Targets with high saves are worth less.
						IF "c1"
							CharacterGetAbility(_SaveAmount, _Char, _SaveType)
						THEN
							Cast(_SaveScore, _SaveAmount)
							//Burning targets are worth less for Insect Plague.
							IF "c1"
								CharacterHasStatus(_Char, BURNING)
							THEN
								Multiply(_SaveScore, -0.4)
							ELSE
								Multiply(_SaveScore, -0.2)
							ENDIF
							
							Add(%AMER_SKILL_InsectPlague_SplashScore, _SaveScore)
						ENDIF
					ENDIF
				ENDIF
			ENDIF
		ENDIF
	ENDIF
	
	
	
	
// Calculate the character we should attack
EVENT CalculateTarget_AMER_SKILL_InsectPlague
VARS	
	CHARACTER:_Char
	// [CALC_TARGET_VARS]
	FLOAT:_StatResistance
	FLOAT:_Score
	FLOAT:_SkillRangeMin
	FLOAT:_SkillRangeMax
	FLOAT:_DistanceToChar
	FLOAT:_DistanceScore
	FLOAT:_SaveScore
	FLOAT:_SplashRadius
	FLOAT:_Vitality
	INT:_SaveAmount
	ABILITY:_SaveType = BodyBuilding
	// [~CALC_TARGET_VARS]
ON
	OnIterateCharacter(_Char, "CalculateTarget_AMER_SKILL_InsectPlague")	
ACTIONS
	// [CALC_CHAR_TARGET_ACTIONS_PRE]
	Set(_Score, 0.0)
	// [~CALC_CHAR_TARGET_ACTIONS_PRE]
	// [CALC_CHAR_TARGET_ACTIONS]
	IF "c1"
	    CharacterIsEnemy(__Me, _Char)
	THEN
		IF "!c1"
			CharacterIsDead(_Char)
		THEN
			IF "!c1&!c2"
			    CharacterHasStatus(_Char, INVISIBLE)
			    CharacterHasStatus(_Char, SNEAKING)
			THEN
				IF "!c1"
					CharacterHasStatus(_Char, CHARMED)
				THEN
					IF "!c1"
						CharacterHasStatus(_Char, INVULNERABLE)
					THEN
						//Kill range calculation
						IF "c1"
							CharacterGetStat(_Vitality,  _Char, Vitality)
						THEN
							//Favor high vitality targets.
							Multiply(_Vitality, 2.0)
							Add(_Score, _Vitality)
						ENDIF
							
						//Splash score calculation
						IF "c1"
							CharacterGetSkillImpactRange(_SplashRadius, __Me, AMER_SKILL_InsectPlague)
						THEN
							Set(%AMER_SKILL_InsectPlague_SplashScore, 0.0)
							IterateCharactersNear(_Char, _SplashRadius, "SplashScore_AMER_SKILL_InsectPlague")
							Add(_Score, %AMER_SKILL_InsectPlague_SplashScore)
						ENDIF
							
						//Marked
						IF "c1"
							CharacterHasStatus(_Char, AGGRO_MARKED)
						THEN
							Add(_Score, 1.0)
						ENDIF
								
						//Summons are worth less.
						IF "c1"
							CharacterIsSummon(_Char)
						THEN
							Add(_Score, -5.0)
						ENDIF
						
						//Debuff Refresh score calculation
						IF "c1"
							CharacterHasStatus(_Char, CONSUME, "AMER_STATUS_InsectPlague")
						THEN
							Add(_Score, -10.0)
						ENDIF
						
						//Saving Throw score calculation
						IF "c1"
							CharacterGetAbility(_SaveAmount, _Char, _SaveType)
						THEN
							Cast(_SaveScore, _SaveAmount)
							//Burning targets can resist Insect Plague.
							IF "c1"
								CharacterHasStatus(_Char, BURNING)
							THEN
								Multiply(_SaveScore, -2.0)
							ELSE
								Multiply(_SaveScore, -1.0)
							ENDIF
							Add(_Score, _SaveScore)
						ENDIF
						
						// Range score calculation
						IF "c1&c2"
							CharacterGetSkillRange(_SkillRangeMin, _SkillRangeMax, __Me, AMER_SKILL_InsectPlague)
							GetDistance(_DistanceToChar, __Me, _Char)
						THEN
							Set(_DistanceScore, _DistanceToChar)
							IF "c1"
								IsGreaterThen(_DistanceScore, _SkillRangeMax)
							THEN
								Subtract(_DistanceScore, _SkillRangeMax)
								Multiply(_DistanceScore, -1.0)
							ELIF "c1"
								IsLessThen(_DistanceScore, _SkillRangeMin)
							THEN
								Subtract(_DistanceScore, _SkillRangeMin)
								Multiply(_DistanceScore, 1.0)
							ELSE 
								Set(_DistanceScore, 0.0)
							ENDIF
							Add(_Score, _DistanceScore)
						ENDIF
						
						// Can see score calculation
						IF "!c1"
							CharacterCanSee(__Me, _Char)
						THEN
							Add(_Score, -10.0)
						ENDIF
						
						IF "c1"
							IsGreaterThen(_Score, %SkillTargetScore_AMER_SKILL_InsectPlague)
						THEN
							Set(%SkillTargetChar_AMER_SKILL_InsectPlague, _Char)
							Set(%SkillTargetScore_AMER_SKILL_InsectPlague, _Score)
						ENDIF
					ENDIF
				ENDIF
			ENDIF
		ENDIF
	ENDIF
	// [~CALC_CHAR_TARGET_ACTIONS]
	
	
	
	
	
	
	
	