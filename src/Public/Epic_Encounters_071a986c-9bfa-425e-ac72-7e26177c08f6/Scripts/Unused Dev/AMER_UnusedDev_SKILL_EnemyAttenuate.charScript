#TEMPLATE "_SKILL_Base" : AMER_SKILL_Attenuate
	
INIT
CHARACTER:__Me
FLOAT:%SkillTargetScore_AMER_SKILL_Attenuate=-1000000
// [GLOBAL_VARS]
EXTERN FLOAT:%AMER_SKILL_Attenuate_ResistanceLimit = 90
EXTERN FLOAT:%AMER_SKILL_Attenuate_ReserveVitality = 0.25
// [~GLOBAL_VARS]
	
EVENTS
	
// [EVENTS]
// [~EVENTS]
	
// Calculate the priority of the skill
EVENT CalculateScore_AMER_SKILL_Attenuate
VARS
	// [CALC_VARS]
	FLOAT:_SkillRangeMin
	FLOAT:_SkillRangeMax
	FLOAT3:_TargetPos
	FLOAT:_Vitality
	// [~CALC_VARS]
ON
	OnFunction("CalculateScore_AMER_SKILL_Attenuate")
ACTIONS
	Set(%SkillTargetScore_AMER_SKILL_Attenuate, -1000000)

	// [CALC_ACTIONS_PRE]
	// [~CALC_ACTIONS_PRE]
	// [CALC_ACTIONS]
	IF "c1&!c2"
		CharacterGetStat(_Vitality, __Me, Vitality)
		IsLessThen(_Vitality, %AMER_SKILL_Attenuate_ReserveVitality)
	THEN
		IterateCharactersInCombat(__Me, "CalculateTarget_AMER_SKILL_Attenuate", Highest, Vitality)
		IF "!c1"
			IsEqual(%SkillTargetChar_AMER_SKILL_Attenuate, null)
		THEN
			Add(%ActionScore_AMER_SKILL_Attenuate, %SkillTargetScore_AMER_SKILL_Attenuate)
		ENDIF
	ENDIF
	// [~CALC_ACTIONS]
	
	
	
	
// Calculate the character we should attack
EVENT CalculateTarget_AMER_SKILL_Attenuate
VARS	
	CHARACTER:_Char
	// [CALC_TARGET_VARS]
	INT:_ClassScore_AMER_SKILL_Attenuate
	FLOAT:_StatResistance
	FLOAT:_Score
	FLOAT:_Vitality
	FLOAT:_SkillRangeMin
	FLOAT:_SkillRangeMax
	FLOAT:_DistanceToChar
	FLOAT:_DistanceScore
	FLOAT:_SaveScore
	INT:_SaveAmount
	ABILITY:_SaveType = BodyBuilding
	CHARACTERSTAT:_ResistType = ShadowResistance
	// [~CALC_TARGET_VARS]
ON
	OnIterateCharacter(_Char, "CalculateTarget_AMER_SKILL_Attenuate")	
ACTIONS
	// [CALC_CHAR_TARGET_ACTIONS_PRE]
	Set(_Score, 0.0)
	// [~CALC_CHAR_TARGET_ACTIONS_PRE]
	// [CALC_CHAR_TARGET_ACTIONS]
	IF "c1"
	    CharacterIsEnemy(__Me, _Char)
	THEN
		IF "!c1"
			CharacterIsDead(_Char)
		THEN
			IF "!c1&!c2"
			    CharacterHasStatus(_Char, INVISIBLE)
			    CharacterHasStatus(_Char, SNEAKING)
			THEN
				IF "!c1|!c2"
				    CharacterGetStat(_StatResistance, _Char, ShadowResistance)
				    IsGreaterThen(_StatResistance, %AMER_SKILL_Attenuate_ResistanceLimit)
				THEN
					IF "!c1"
						CharacterHasStatus(_Char, CHARMED)
					THEN
						IF "!c1"
							CharacterHasStatus(_Char, INVULNERABLE)
						THEN
							//Kill range calculation
							IF "c1"
								CharacterGetStat(_Vitality,  _Char, Vitality)
							THEN
								//Favor high vitality targets.
								Multiply(_Vitality, 2.0)
								Add(_Score, _Vitality)
							ENDIF
							
							//Resistance calculation
							Divide(_StatResistance, -100.0)
							Multiply(_StatResistance, 5.0)
							Add(_Score, _StatResistance)
							
							//Marked.
						    IF "c1"
								CharacterHasStatus(_Char, AGGRO_MARKED)
						    THEN
								Add(_Score, 1.0)
						    ENDIF
								
							//Summons are worth less.
							IF "c1"
								CharacterIsSummon(_Char)
							THEN
								Add(_Score, -5.0)
							ENDIF
							
							//Debuff Refresh score calculation
							IF "c1|c2|c3|c4"
								CharacterHasStatus(_Char, CONSUME, "AMER_STATUS_Attenuate")
								CharacterHasStatus(_Char, CONSUME, "AMER_STATUS_Attenuate2")
								CharacterHasStatus(_Char, CONSUME, "AMER_STATUS_Attenuate3")
								CharacterHasStatus(_Char, CONSUME, "AMER_STATUS_Attenuate4")
							THEN
								Add(_Score, -10.0)
							ENDIF
							
							//Saving Throw score calculation
							IF "c1"
								CharacterGetAbility(_SaveAmount, _Char, _SaveType)
							THEN
								Cast(_SaveScore, _SaveAmount)
								Multiply(_SaveScore, -1.0)
								Add(_Score, _SaveScore)
							ENDIF
							
						    // Range score calculation
							IF "c1&c2"
							    CharacterGetSkillRange(_SkillRangeMin, _SkillRangeMax, __Me, AMER_SKILL_Attenuate)
							    GetDistance(_DistanceToChar, __Me, _Char)
							THEN
							    Set(_DistanceScore, _DistanceToChar)
							    IF "c1"
									IsGreaterThen(_DistanceScore, _SkillRangeMax)
							    THEN
									Subtract(_DistanceScore, _SkillRangeMax)
									Multiply(_DistanceScore, -1.0)
							    ELIF "c1"
									IsLessThen(_DistanceScore, _SkillRangeMin)
							    THEN
									Subtract(_DistanceScore, _SkillRangeMin)
									Multiply(_DistanceScore, 1.0)
							    ELSE 
									Set(_DistanceScore, 0.0)
							    ENDIF
								Add(_Score, _DistanceScore)
							ENDIF
						    
						    // Can see score calculation
						    IF "!c1"
								CharacterCanSee(__Me, _Char)
						    THEN
								Add(_Score, -10.0)
						    ENDIF
						    
							IF "c1"
								IsGreaterThen(_Score, %SkillTargetScore_AMER_SKILL_Attenuate)
							THEN
								Set(%SkillTargetChar_AMER_SKILL_Attenuate, _Char)
								Set(%SkillTargetScore_AMER_SKILL_Attenuate, _Score)
							ENDIF
						ENDIF
					ENDIF
				ENDIF
			ENDIF
		ENDIF
	ENDIF
	// [~CALC_CHAR_TARGET_ACTIONS]
	
	
	
	
	
	
	
	