#TEMPLATE "_SKILL_Base" : Target_EnemyFortify
	
INIT
CHARACTER:__Me
FLOAT:%SkillTargetScore_Target_EnemyFortify=-1000000
// [GLOBAL_VARS]
EXTERN INT:%Target_EnemyFortify_UseOnAllies = 1
EXTERN FLOAT:%Target_EnemyFortify_MinUnmappedArmor = 1.0
// [~GLOBAL_VARS]
	
EVENTS
	
// [EVENTS]
// [~EVENTS]
	
// Calculate the priority of the skill
EVENT CalculateScore_Target_EnemyFortify
VARS
	// [CALC_VARS]
	FLOAT:_SkillRangeMin
	FLOAT:_SkillRangeMax
	FLOAT3:_TargetPos
	// [~CALC_VARS]
ON
	OnFunction("CalculateScore_Target_EnemyFortify")
ACTIONS
	Set(%SkillTargetScore_Target_EnemyFortify, -1000000)

	// [CALC_ACTIONS_PRE]
	// [~CALC_ACTIONS_PRE]
	// [CALC_ACTIONS]
	IF "c1"
		IsEqual(%Target_EnemyFortify_UseOnAllies, INT:1)
	THEN
		IterateCharactersInCombat(__Me, "CalculateTarget_Target_EnemyFortify", Highest, Vitality)
		IF "!c1"
			IsEqual(%SkillTargetChar_Target_EnemyFortify, null)
		THEN
			Add(%ActionScore_Target_EnemyFortify, %SkillTargetScore_Target_EnemyFortify)
		ENDIF
	ELIF "!c1"
		CharacterHasStatus(__Me, FORTIFIED)
	THEN
		Set(%SkillTargetChar_Target_EnemyFortify, __Me)
		Set(%ActionScore_Target_EnemyFortify, 20.0)
	ENDIF
	// [~CALC_ACTIONS]
	
	
	
	
// Calculate the character we should target
EVENT CalculateTarget_Target_EnemyFortify
VARS	
	CHARACTER:_Char
	// [CALC_TARGET_VARS]
	INT:_ClassScore_Target_EnemyFortify
	FLOAT:_StatResistance
	FLOAT:_Score
	FLOAT:_SkillRangeMin
	FLOAT:_SkillRangeMax
	FLOAT:_DistanceToChar
	FLOAT:_DistanceScore
	FLOAT:_SaveScore
	FLOAT:_Vitality
	FLOAT:_Armor
	FLOAT:_Level
	INT:_SaveAmount
	// [~CALC_TARGET_VARS]
ON
	OnIterateCharacter(_Char, "CalculateTarget_Target_EnemyFortify")	
ACTIONS
	// [CALC_CHAR_TARGET_ACTIONS_PRE]
	Set(_Score, 0.0)
	// [~CALC_CHAR_TARGET_ACTIONS_PRE]
	// [CALC_CHAR_TARGET_ACTIONS]
	IF "!c1"
		CharacterIsDead(_Char)
	THEN
		IF "c1"
			CharacterIsAlly(__Me, _Char)
		THEN
			IF "!c1"
				CharacterIsSummon(_Char)
			THEN
				IF "!c1"
					CharacterHasStatus(_Char CHARMED)
				THEN
					IF "!c1"
						CharacterHasStatus(_Char, FORTIFIED)
					THEN
						//Unmapped Armor calculation: favor high armor.
						IF "c1&c2"
							CharacterGetStat(_Armor, _Char, Armor)
							CharacterGetStat(_Level, _Char, Level)
						THEN
							SetVar(__Me, "AMER_UnmapAttributeValue", _Armor)
							SetVar(__Me, "AMER_UnmapAttributeLevel", _Level)
							CallFunction("AMER_UnmapArmor")
								
							IF "c1&!c2"
								GetVar(_Armor, __Me, "AMER_UnmapAttributeValue")
								IsGreaterThen(_Armor, %Target_EnemyFortify_MinUnmappedArmor)
							THEN
								Add(_Score, _Armor)
								//Triage score calculation: Favor targets with
								//low vitality, try to stabilize/proc angel.
								IF "c1"
									CharacterGetStat(_Vitality, _Char, Vitality)
								THEN
									Multiply(_Vitality, -1.0)
									Add(_Vitality, 1.0)
									Multiply(_Vitality, 5.0)
									Add(_Score, _Vitality)
								ENDIF
									
									
								// Range score calculation
								IF "c1&c2"
									CharacterGetSkillRange(_SkillRangeMin, _SkillRangeMax, __Me, Target_EnemyFortify)
									GetDistance(_DistanceToChar, __Me, _Char)
								THEN
									Set(_DistanceScore, _DistanceToChar)
									IF "c1"
										IsGreaterThen(_DistanceScore, _SkillRangeMax)
									THEN
										Subtract(_DistanceScore, _SkillRangeMax)
										Multiply(_DistanceScore, -1.0)
									ELIF "c1"
										IsLessThen(_DistanceScore, _SkillRangeMin)
									THEN
										Subtract(_DistanceScore, _SkillRangeMin)
										Multiply(_DistanceScore, 1.0)
									ELSE 
										Set(_DistanceScore, 0.0)
									ENDIF
									Add(_Score, _DistanceScore)
								ENDIF
									
								// Can see score calculation
								IF "!c1"
									CharacterCanSee(__Me, _Char)
								THEN
									Add(_Score, -10.0)
								ENDIF
								
								IF "c1"
									IsGreaterThen(_Score, %SkillTargetScore_Target_EnemyFortify)
								THEN
									Set(%SkillTargetChar_Target_EnemyFortify, _Char)
									Set(%SkillTargetScore_Target_EnemyFortify, _Score)
								ENDIF
							ENDIF
						ENDIF
					ENDIF
				ENDIF
			ENDIF
		ENDIF
	ENDIF
	// [~CALC_CHAR_TARGET_ACTIONS]
	
	
	
	
	
	
	
	